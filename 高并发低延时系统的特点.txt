https://www.zhihu.com/question/21516827

低延时-reactor模式，数据库就需要缓存在内存
高并发-多线程，多进程



nginx 多进程网络编程的巅峰
memcached 多线程网络编程的巅峰
redis单线程网络编程的巅峰~~



目前主流的各种网络通信库都是基于reactor模式，然后在其上搭建业务



我们的服务都是运行在服务器上的，程序运行中需要用到的硬件大概有四样就是cpu，内存，网卡，还有磁盘，这四样的速度依次递减，而且速度差距都是N多倍的

单机来讲，主要涉及CPU,内存，网络，磁盘
CPU，多线程，合理利用CPU，这里涉及到利用CPU的核心，怎么使用多线程，不能一味求多，减少切换上下文的开销
内存,代码中不要有太多的资源竞争，多个线程读取一个内存，并行德云算变成了串行，导致性能下降
网络,epoll就是请求之后不用等待直接返回，提高了利用率
磁盘，增加缓存，减少磁盘读写



长链接多active链接少，这场景很适合epoll来做。
epoll这种多路复用就绪通知技术确实适合海量并发长链连接的场景下，与select/poll等相比，它去除了最大连接数的限制，也减少了在内核态和用户态之间复制文件描述符的开销。
epoll和高并发就不是一个层面的东西，基础概念都没弄明白，epoll叫io复用，并发模型是通过多线程或进程实现并发处理