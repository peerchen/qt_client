
// TestChartDlg.cpp : 实现文件
//

#include "stdafx.h"
#include "TestChart.h"
#include "TestChartDlg.h"
#include "afxdialogex.h"
#include "TCSocket.h"


#include  "tool\HSDes.h"
#include  <string>
#include  <boost\shared_array.hpp>
#include <boost\date_time\gregorian\gregorian.hpp>
#include "strutils.h"

using namespace boost::gregorian;
using namespace std;

//#define ZLIB_WINAPI

#define _CRT_SECURE_NO_DEPRECATE

#include "./tool/share_2005/zlib/zlib.h"
#ifdef _DEBUG
	#pragma comment(lib,".\\tool\\share_2005\\lib\\release\\zlib.lib") 
	//#pragma message("Automatically linking with ..\\..\\Share\\lib\\debug\\ShareFile.lib")  
#else
	#pragma comment(lib,".\\tool\\share_2005\\lib\\release\\zlib.lib") 
	//#pragma message("Automatically linking with ..\\..\\Share\\lib\\Release\\ShareFile.lib")  
#endif



string  gsSecurity[] = { "AGTD", "AUTD","5120","USDRMB" };
int     gnMarket[]   = { HJ_MARKET | HJ_SH_CURR,HJ_MARKET | HJ_SH_CURR ,HJ_MARKET | HJ_WORLD,FOREIGN_MARKET | WH_BASE_RATE };

string  gsIP[]       = { "127.0.0.1","182.254.148.116","123.206.226.197", "113.105.79.28","113.105.79.29","124.227.108.71" };
string  gsPort[]       = { "6019","6019","6019", "6019","6019","16019" };


const int MAX_BUFSIZE = 1024000;
const int MAX_ZIPSIZE = 1024000;

int       gRecevLen   = 0;
int       gDealLen   = 0;
char      szBuf[MAX_BUFSIZE];//Socket接收缓冲区
char      szDealBuf[MAX_BUFSIZE];//数据处理拷贝
char      szZipBuf[MAX_ZIPSIZE];//压缩数据缓冲区

char      szAskBuf[10240];
char      m_szFlag[5]="2010";

static CTCSocket  m_ClientSocket;
static CTCSocket  m_ComunicationSocket;

#ifdef _DEBUG
#define new DEBUG_NEW
#endif
#define  WM_MSG_MOUSEAXIS (WM_USER+100)

// CTestChartDlg 对话框


struct  packHead
{
	char tag[4];
	int len;
	packHead()
	{
		memcpy(tag, 0, sizeof(tag));
		len = 0;
	}
};


CTestChartDlg::CTestChartDlg(CWnd* pParent /*=NULL*/)
	: CDialogEx(CTestChartDlg::IDD, pParent) 
	, m_nAutoQuery(0)
{
	m_hIcon = AfxGetApp()->LoadIcon(IDR_MAINFRAME);
 
	m_TimerCnt = 1;
	m_nShowType = G_CHTTYPE_TREND;

	//lastNum =0;




#pragma region    存储数据到数据结构中以便使用
	SaveDayData(1  ,20080801.000000,0.0,45.000000,44.160000,45.200001,43.580002,0.0,0.850000,2797027.000000,123916624.930000);
	SaveDayData(2  ,20080804.000000,0.0,44.820000,44.799999,45.299999,44.330002,0.0,-0.180000,1663786.000000,74550036.700000);
	SaveDayData(3  ,20080805.000000,0.0,44.650002,44.820000,45.299999,43.799999,0.0,-0.170000,1710192.000000,75972396.730000);
	SaveDayData(4  ,20080806.000000,0.0,44.200001,44.799999,44.990002,43.599998,0.0,-0.450000,1197440.000000,53085916.800000);
	SaveDayData(5  ,20080807.000000,0.0,42.299999,44.200001,44.299999,41.799999,0.0,-1.900000,3600350.000000,153833782.790000);
	SaveDayData(6  ,20080808.000000,0.0,42.400002,42.299999,42.700001,41.320000,0.0,0.100000,3380270.000000,142343771.790000);
	SaveDayData(7  ,20080811.000000,0.0,40.849998,42.480000,42.480000,40.500000,0.0,-1.550000,3407175.000000,141765228.410000);
	SaveDayData(8  ,20080812.000000,0.0,40.799999,40.500000,41.400002,40.299999,0.0,-0.050000,2175035.000000,89101545.430000);
	SaveDayData(9  ,20080813.000000,0.0,40.509998,40.799999,41.200001,39.310001,0.0,-0.290000,2524071.000000,101848548.530000);
	SaveDayData(10 ,20080814.000000,0.0,38.000000,40.509998,42.099998,37.049999,0.0,-2.510000,11613732.000000,442502477.630000);
	SaveDayData(11 ,20080815.000000,0.0,34.500000,37.000000,37.349998,34.330002,0.0,-3.500000,16130792.000000,574996031.200000);
	SaveDayData(12 ,20080818.000000,0.0,33.630001,35.000000,35.000000,33.599998,0.0,-0.870000,7217555.000000,247709563.090000);
	SaveDayData(13 ,20080819.000000,0.0,33.360001,33.200001,33.639999,33.009998,0.0,-0.270000,3658374.000000,122144715.850000);
	SaveDayData(14 ,20080820.000000,0.0,35.590000,33.509998,36.000000,33.509998,0.0,2.230000,10962477.000000,383954686.850000);
	SaveDayData(15 ,20080821.000000,0.0,32.400002,34.799999,35.400002,32.400002,0.0,-3.190000,4608929.000000,155770885.520000);
	SaveDayData(16 ,20080822.000000,0.0,33.049999,32.099998,33.500000,31.100000,0.0,0.650000,4024384.000000,129539422.600000);
	SaveDayData(17 ,20080825.000000,0.0,32.299999,33.049999,33.270000,32.000000,0.0,-0.750000,2471143.000000,80721691.110000);
	SaveDayData(18 ,20080826.000000,0.0,31.879999,32.270000,32.270000,31.100000,0.0,-0.420000,1778959.000000,56217539.790000);
	SaveDayData(19 ,20080827.000000,0.0,31.000000,31.879999,32.020000,30.150000,0.0,-0.880000,3356074.000000,104433405.410000);
	SaveDayData(20 ,20080828.000000,0.0,30.790001,31.299999,31.780001,29.889999,0.0,-0.210000,4120982.000000,125465830.440000);
	SaveDayData(21 ,20080829.000000,0.0,30.299999,30.809999,31.000000,29.799999,0.0,-0.490000,7605864.000000,230514402.040000);
	SaveDayData(22 ,20080901.000000,0.0,28.430000,30.000000,30.190001,28.080000,0.0,-1.870000,6361453.000000,182497052.340000);
	SaveDayData(23 ,20080902.000000,0.0,28.820000,28.160000,29.600000,28.120001,0.0,0.390000,2530080.000000,73106056.420000);
	SaveDayData(24 ,20080903.000000,0.0,29.000000,29.059999,29.150000,28.100000,0.0,0.180000,2060818.000000,58845861.640000);
	SaveDayData(25 ,20080904.000000,0.0,29.600000,28.549999,29.850000,28.549999,0.0,0.600000,1648554.000000,48712974.130000);
	SaveDayData(26 ,20080905.000000,0.0,28.350000,29.000000,29.299999,28.100000,0.0,-1.250000,2597622.000000,75205554.030000);
	SaveDayData(27 ,20080908.000000,0.0,27.000000,28.549999,28.700001,26.500000,0.0,-1.350000,4820067.000000,130438741.990000);
	SaveDayData(28 ,20080909.000000,0.0,26.850000,27.080000,27.250000,26.660000,0.0,-0.150000,3044851.000000,81710243.700000);
	SaveDayData(29 ,20080910.000000,0.0,26.900000,26.780001,27.520000,26.200001,0.0,0.050000,1553062.000000,41554611.590000);
	SaveDayData(30 ,20080911.000000,0.0,26.299999,26.809999,26.870001,26.260000,0.0,-0.600000,1676036.000000,44564459.080000);
	SaveDayData(31 ,20080912.000000,0.0,26.600000,26.280001,27.180000,26.020000,0.0,0.300000,2170714.000000,57861678.970000);
	SaveDayData(32 ,20080916.000000,0.0,27.959999,26.500000,28.049999,26.100000,0.0,1.360000,4291704.000000,117845564.080000);
	SaveDayData(33 ,20080917.000000,0.0,28.250000,27.900000,28.959999,27.500000,0.0,0.290000,3544559.000000,100463171.720000);
	SaveDayData(34 ,20080918.000000,0.0,27.850000,28.080000,29.120001,26.610001,0.0,-0.400000,3739108.000000,104032110.920000);
	SaveDayData(35 ,20080919.000000,0.0,30.639999,30.020000,30.639999,29.879999,0.0,2.790000,5526142.000000,168500557.510000);
	SaveDayData(36 ,20080922.000000,0.0,30.950001,33.700001,33.700001,30.580000,0.0,0.310000,13445851.000000,426145697.440000);
	SaveDayData(37 ,20080923.000000,0.0,29.570000,30.000000,30.240000,28.510000,0.0,-1.380000,4277673.000000,126051371.390000);
	SaveDayData(38 ,20080924.000000,0.0,28.000000,26.660000,28.400000,26.660000,0.0,-1.570000,9450095.000000,261551167.190000);
	SaveDayData(39 ,20080925.000000,0.0,28.700001,27.990000,29.570000,27.700001,0.0,0.700000,14312273.000000,411375237.790000);
	SaveDayData(40 ,20080926.000000,0.0,29.860001,28.670000,30.600000,28.600000,0.0,1.160000,6850985.000000,204150019.320000);
	SaveDayData(41 ,20081006.000000,0.0,28.570000,29.850000,29.850000,28.570000,0.0,-1.290000,2105943.000000,60958913.270000);
	SaveDayData(42 ,20081007.000000,0.0,28.160000,27.000000,28.250000,27.000000,0.0,-0.410000,2218058.000000,61353220.860000);
	SaveDayData(43 ,20081008.000000,0.0,25.340000,27.500000,27.500000,25.340000,0.0,-2.820000,4848440.000000,127633385.640000);
	SaveDayData(44 ,20081009.000000,0.0,22.809999,24.000000,25.299999,22.809999,0.0,-2.530000,23203087.000000,533525337.450000);
	SaveDayData(45 ,20081010.000000,0.0,21.900000,21.200001,22.690001,20.530001,0.0,-0.910000,18345671.000000,387622052.520000);
	SaveDayData(46 ,20081013.000000,0.0,21.500000,21.260000,21.600000,20.299999,0.0,-0.400000,8085404.000000,169051552.630000);
	SaveDayData(47 ,20081014.000000,0.0,21.799999,22.410000,22.600000,21.600000,0.0,0.300000,10661168.000000,235295252.740000);
	SaveDayData(48 ,20081015.000000,0.0,21.090000,21.879999,21.889999,20.700001,0.0,-0.710000,3264658.000000,69008334.780000);
	SaveDayData(49 ,20081016.000000,0.0,19.799999,20.010000,20.950001,19.799999,0.0,-1.290000,4109988.000000,82917625.750000);
	SaveDayData(50 ,20081017.000000,0.0,19.809999,20.000000,20.200001,19.590000,0.0,0.010000,3487924.000000,69143496.320000);
	SaveDayData(51 ,20081020.000000,0.0,20.420000,19.980000,20.540001,19.850000,0.0,0.610000,4436293.000000,89828489.540000);
	SaveDayData(52 ,20081021.000000,0.0,19.930000,20.610001,20.700001,19.010000,0.0,-0.490000,9131381.000000,180330068.800000);
	SaveDayData(53 ,20081022.000000,0.0,19.600000,19.400000,19.870001,19.100000,0.0,-0.330000,7624683.000000,149309228.150000);
	SaveDayData(54 ,20081023.000000,0.0,18.680000,19.170000,19.170000,18.500000,0.0,-0.920000,11088192.000000,208345119.020000);
	SaveDayData(55 ,20081024.000000,0.0,18.500000,18.950001,19.299999,18.260000,0.0,-0.180000,7353379.000000,137305796.960000);
	SaveDayData(56 ,20081027.000000,0.0,16.650000,17.980000,18.000000,16.650000,0.0,-1.850000,6416127.000000,109157840.460000);
	SaveDayData(57 ,20081028.000000,0.0,16.719999,15.790000,16.850000,15.500000,0.0,0.070000,9402431.000000,153604347.410000);
	SaveDayData(58 ,20081029.000000,0.0,17.010000,16.980000,17.389999,16.459999,0.0,0.290000,8587671.000000,145634581.280000);
	SaveDayData(59 ,20081030.000000,0.0,17.700001,17.150000,17.879999,16.799999,0.0,0.690000,10269364.000000,179007996.610000);
	SaveDayData(60 ,20081031.000000,0.0,16.959999,17.790001,18.330000,16.959999,0.0,-0.740000,8374478.000000,148099621.270000);
	SaveDayData(61 ,20081103.000000,0.0,17.500000,16.870001,17.660000,16.590000,0.0,0.540000,4302962.000000,74220250.190000);
	SaveDayData(62 ,20081104.000000,0.0,17.260000,17.389999,17.799999,17.080000,0.0,-0.240000,4535496.000000,79096702.440000);
	SaveDayData(63 ,20081105.000000,0.0,17.980000,17.320000,18.270000,17.320000,0.0,0.720000,3621555.000000,65000831.840000);
	SaveDayData(64 ,20081106.000000,0.0,17.809999,17.500000,18.000000,17.320000,0.0,-0.170000,1900242.000000,33672157.520000);
	SaveDayData(65 ,20081107.000000,0.0,18.480000,17.559999,18.480000,17.350000,0.0,0.670000,4989378.000000,89959183.600000);
	SaveDayData(66 ,20081110.000000,0.0,19.850000,18.500000,19.990000,18.490000,0.0,1.370000,7322244.000000,142448333.820000);
	SaveDayData(67 ,20081111.000000,0.0,19.510000,19.650000,19.700001,18.900000,0.0,-0.340000,11457046.000000,221675421.120000);
	SaveDayData(68 ,20081112.000000,0.0,17.700001,18.799999,18.889999,17.559999,0.0,-1.810000,18818125.000000,341988329.280000);
	SaveDayData(69 ,20081113.000000,0.0,17.809999,17.299999,18.350000,16.580000,0.0,0.110000,29134489.000000,510765069.060000);
	SaveDayData(70 ,20081114.000000,0.0,19.430000,18.000000,19.459999,18.000000,0.0,1.620000,22524837.000000,422738628.420000);
	SaveDayData(71 ,20081117.000000,0.0,21.370001,19.500000,21.370001,19.480000,0.0,1.940000,21265881.000000,439815330.620000);
	SaveDayData(72 ,20081118.000000,0.0,20.969999,21.950001,22.799999,20.200001,0.0,-0.400000,25373552.000000,555272919.570000);
	SaveDayData(73 ,20081119.000000,0.0,23.070000,21.400000,23.070000,21.400000,0.0,2.100000,21703255.000000,488809151.110000);
	SaveDayData(74 ,20081120.000000,0.0,23.680000,23.500000,24.549999,23.459999,0.0,0.610000,27155946.000000,651816565.960000);
	SaveDayData(75 ,20081121.000000,0.0,23.549999,22.799999,24.040001,21.680000,0.0,-0.130000,16207940.000000,371316120.460000);
	SaveDayData(76 ,20081124.000000,0.0,21.280001,23.020000,23.200001,21.200001,0.0,-2.270000,10790820.000000,234444190.980000);
	SaveDayData(77 ,20081125.000000,0.0,21.010000,21.639999,21.990000,20.299999,0.0,-0.270000,9573248.000000,199469081.490000);
	SaveDayData(78 ,20081126.000000,0.0,20.799999,21.200001,21.430000,20.799999,0.0,-0.210000,13435309.000000,283973979.050000);
	SaveDayData(79 ,20081127.000000,0.0,20.799999,20.799999,20.799999,20.799999,0.0,0.000000,0.000000,0.000000);
	SaveDayData(80 ,20081128.000000,0.0,21.299999,20.780001,21.680000,20.450001,0.0,0.500000,11649629.000000,246640356.120000);
	SaveDayData(81 ,20081201.000000,0.0,22.500000,21.299999,22.549999,21.000000,0.0,1.200000,11741333.000000,258045558.950000);
	SaveDayData(82 ,20081202.000000,0.0,23.250000,21.799999,23.850000,21.600000,0.0,0.750000,10943633.000000,251239244.340000);
	SaveDayData(83 ,20081203.000000,0.0,25.170000,23.260000,25.299999,23.260000,0.0,1.920000,12222299.000000,298905249.070000);
	SaveDayData(84 ,20081204.000000,0.0,25.700001,25.500000,27.219999,25.500000,0.0,0.530000,13877577.000000,367750548.350000);
	SaveDayData(85 ,20081205.000000,0.0,25.770000,25.020000,26.799999,24.900000,0.0,0.070000,8604442.000000,222826664.750000);
	SaveDayData(86 ,20081208.000000,0.0,26.870001,26.320000,27.190001,25.870001,0.0,1.100000,6765740.000000,179210654.330000);
	SaveDayData(87 ,20081209.000000,0.0,25.209999,26.860001,27.200001,24.910000,0.0,-1.660000,11218358.000000,290280948.040000);
	SaveDayData(88 ,20081210.000000,0.0,26.250000,25.000000,26.490000,24.900000,0.0,1.040000,7826435.000000,199982295.270000);
	SaveDayData(89 ,20081211.000000,0.0,25.799999,26.299999,26.500000,25.400000,0.0,-0.450000,4836791.000000,125483223.940000);
	SaveDayData(90 ,20081212.000000,0.0,26.980000,25.740000,27.299999,24.980000,0.0,1.180000,22481800.000000,592098283.840000);
	SaveDayData(91 ,20081215.000000,0.0,28.030001,27.600000,28.600000,27.299999,0.0,1.050000,19525638.000000,546880850.010000);
	SaveDayData(92 ,20081216.000000,0.0,26.830000,27.790001,27.790001,25.809999,0.0,-1.200000,14070507.000000,373180831.850000);
	SaveDayData(93 ,20081217.000000,0.0,27.490000,26.900000,27.879999,26.100000,0.0,0.660000,10479449.000000,283426374.040000);
	SaveDayData(94 ,20081218.000000,0.0,27.170000,27.490000,27.490000,26.799999,0.0,-0.320000,7926560.000000,214675922.420000);
	SaveDayData(95 ,20081219.000000,0.0,27.400000,27.170000,28.150000,26.900000,0.0,0.230000,9698721.000000,268977854.140000);
	SaveDayData(96 ,20081222.000000,0.0,28.520000,27.100000,28.780001,27.049999,0.0,1.120000,12850893.000000,365231840.740000);
	SaveDayData(97 ,20081223.000000,0.0,27.410000,28.520000,28.530001,27.299999,0.0,-1.110000,8063394.000000,224269334.160000);
	SaveDayData(98 ,20081224.000000,0.0,26.510000,26.959999,26.959999,25.850000,0.0,-0.900000,7224119.000000,190703608.280000);
	SaveDayData(99 ,20081225.000000,0.0,26.160000,26.120001,26.400000,25.000000,0.0,-0.350000,9266929.000000,238842645.230000);
	SaveDayData(100,20081226.000000,0.0,25.650000,26.000000,26.290001,25.120001,0.0,-0.510000,6223258.000000,160040346.490000);
	SaveDayData(101,20081229.000000,0.0,25.889999,25.980000,26.059999,25.110001,0.0,0.240000,3227565.000000,82141554.320000);
	SaveDayData(102,20081230.000000,0.0,26.450001,25.900000,26.780001,25.600000,0.0,0.560000,5390937.000000,142501092.120000);
	SaveDayData(103,20081231.000000,0.0,27.200001,26.730000,27.799999,26.200001,0.0,0.750000,9555544.000000,260334784.790000);
	SaveDayData(104,20090105.000000,0.0,27.889999,28.500000,28.770000,27.580000,0.0,0.690000,14702663.000000,412399301.510000);
	SaveDayData(105,20090106.000000,0.0,29.000000,27.910000,29.320000,27.650000,0.0,1.110000,20966650.000000,594838836.430000);
	SaveDayData(106,20090107.000000,0.0,27.830000,29.049999,29.670000,27.600000,0.0,-1.170000,19893938.000000,566723100.930000);
	SaveDayData(107,20090108.000000,0.0,26.850000,27.000000,27.000000,26.080000,0.0,-0.980000,17414799.000000,465529638.310000);
	SaveDayData(108,20090109.000000,0.0,27.110001,26.700001,27.680000,26.700001,0.0,0.260000,7702089.000000,209075365.400000);
	SaveDayData(109,20090112.000000,0.0,26.400000,27.059999,27.059999,26.309999,0.0,-0.710000,7830701.000000,207684446.310000);
	SaveDayData(110,20090113.000000,0.0,26.020000,26.129999,26.760000,25.870001,0.0,-0.380000,6094843.000000,159688293.010000);
	SaveDayData(111,20090114.000000,0.0,26.680000,26.030001,26.750000,25.980000,0.0,0.660000,8125862.000000,214563825.680000);
	SaveDayData(112,20090115.000000,0.0,27.360001,26.600000,27.980000,26.510000,0.0,0.680000,12934191.000000,355739431.020000);
	SaveDayData(113,20090116.000000,0.0,27.799999,27.540001,28.090000,27.469999,0.0,0.440000,10418410.000000,289989062.120000);
	SaveDayData(114,20090119.000000,0.0,28.879999,27.700001,29.650000,27.700001,0.0,1.080000,20895089.000000,606688365.680000);
	SaveDayData(115,20090120.000000,0.0,28.600000,28.809999,28.809999,28.049999,0.0,-0.280000,5416896.000000,153740956.830000);
	SaveDayData(116,20090121.000000,0.0,27.629999,28.000000,28.740000,27.559999,0.0,-0.970000,6773653.000000,190680239.810000);
	SaveDayData(117,20090122.000000,0.0,28.420000,27.510000,28.469999,27.510000,0.0,0.790000,8478742.000000,238101429.910000);
	SaveDayData(118,20090123.000000,0.0,29.020000,28.650000,29.799999,28.530001,0.0,0.600000,13787487.000000,405889183.320000);
	SaveDayData(119,20090202.000000,0.0,29.320000,29.590000,29.670000,28.850000,0.0,0.300000,7232169.000000,211452563.190000);
	SaveDayData(120,20090203.000000,0.0,30.020000,29.299999,30.360001,28.900000,0.0,0.700000,8394527.000000,250662413.860000);
	SaveDayData(121,20090204.000000,0.0,30.500000,30.100000,30.969999,30.100000,0.0,0.480000,8045458.000000,246497781.020000);
	SaveDayData(122,20090205.000000,0.0,28.950001,30.299999,30.480000,28.420000,0.0,-1.550000,17600162.000000,518638598.930000);
	SaveDayData(123,20090206.000000,0.0,29.799999,28.799999,29.900000,28.799999,0.0,0.850000,23514616.000000,687750643.440000);
	SaveDayData(124,20090209.000000,0.0,30.450001,30.150000,31.250000,30.150000,0.0,0.650000,15431208.000000,471979165.530000);
	SaveDayData(125,20090210.000000,0.0,30.450001,30.580000,30.580000,29.590000,0.0,0.000000,10665686.000000,318926097.350000);
	SaveDayData(126,20090211.000000,0.0,31.160000,29.780001,31.879999,29.620001,0.0,0.710000,17315079.000000,536366253.240000);
	SaveDayData(127,20090212.000000,0.0,33.270000,31.160000,33.330002,30.700001,0.0,2.110000,15813765.000000,509178499.030000);
	SaveDayData(128,20090213.000000,0.0,33.389999,33.900002,34.570000,33.029999,0.0,0.120000,18067520.000000,608537435.510000);
	SaveDayData(129,20090216.000000,0.0,33.610001,33.500000,35.000000,33.200001,0.0,0.220000,13168982.000000,445981248.090000);
	SaveDayData(130,20090217.000000,0.0,32.200001,33.599998,33.599998,32.130001,0.0,-1.410000,13558214.000000,442332757.970000);
	SaveDayData(131,20090218.000000,0.0,30.600000,31.799999,31.799999,30.290001,0.0,-1.600000,15506342.000000,480361734.160000);
	SaveDayData(132,20090219.000000,0.0,31.100000,31.480000,31.780001,30.700001,0.0,0.500000,12391769.000000,386758493.710000);
	SaveDayData(133,20090220.000000,0.0,32.700001,31.100000,33.099998,31.000000,0.0,1.600000,11084443.000000,357638167.370000);
	SaveDayData(134,20090223.000000,0.0,33.450001,32.400002,33.680000,32.000000,0.0,0.750000,8733688.000000,290817481.820000);
	SaveDayData(135,20090224.000000,0.0,31.010000,33.389999,34.099998,30.450001,0.0,-2.440000,13384722.000000,430263476.960000);
	SaveDayData(136,20090225.000000,0.0,31.400000,31.160000,32.000000,30.540001,0.0,0.390000,10734031.000000,334793378.680000);
	SaveDayData(137,20090226.000000,0.0,29.600000,31.420000,31.790001,28.530001,0.0,-1.800000,9432284.000000,287887834.060000);
	SaveDayData(138,20090227.000000,0.0,29.049999,29.500000,29.799999,28.360001,0.0,-0.550000,9951921.000000,288231802.470000);
	SaveDayData(139,20090302.000000,0.0,29.700001,28.950001,30.059999,28.600000,0.0,0.650000,9659611.000000,285396266.020000);
	SaveDayData(140,20090303.000000,0.0,29.660000,28.900000,30.200001,28.680000,0.0,-0.040000,7203755.000000,212551632.960000);
	SaveDayData(141,20090304.000000,0.0,31.580000,29.830000,32.000000,29.830000,0.0,1.920000,7399879.000000,229721450.970000);
	SaveDayData(142,20090305.000000,0.0,32.049999,32.009998,32.980000,31.780001,0.0,0.470000,12003245.000000,388018936.680000);
	SaveDayData(143,20090306.000000,0.0,31.670000,31.719999,32.750000,31.570000,0.0,-0.380000,7362562.000000,236746819.700000);
	SaveDayData(144,20090309.000000,0.0,32.299999,32.200001,32.990002,31.799999,0.0,0.630000,12640280.000000,407582823.490000);
	SaveDayData(145,20090310.000000,0.0,33.849998,32.000000,33.980000,31.400000,0.0,1.550000,14629017.000000,483711458.160000);
	SaveDayData(146,20090311.000000,0.0,33.630001,34.029999,34.250000,33.220001,0.0,-0.220000,8950787.000000,301645132.320000);
	SaveDayData(147,20090312.000000,0.0,33.180000,33.590000,33.799999,32.500000,0.0,-0.450000,5009023.000000,165946438.500000);
	SaveDayData(148,20090313.000000,0.0,33.400002,33.160000,33.799999,32.639999,0.0,0.220000,7337388.000000,244302629.280000);
	SaveDayData(149,20090316.000000,0.0,32.980000,33.349998,33.400002,32.410000,0.0,-0.420000,4493859.000000,147447595.240000);
	SaveDayData(150,20090317.000000,0.0,34.250000,33.150002,34.599998,33.150002,0.0,1.270000,10012023.000000,341152580.450000);
	SaveDayData(151,20090318.000000,0.0,35.500000,34.299999,35.990002,33.900002,0.0,1.250000,8575748.000000,299786388.910000);
	SaveDayData(152,20090319.000000,0.0,35.450001,35.500000,35.880001,34.930000,0.0,-0.050000,6020791.000000,212765004.200000);
	SaveDayData(153,20090320.000000,0.0,35.299999,35.709999,36.090000,34.799999,0.0,-0.150000,8967184.000000,317657178.420000);
	SaveDayData(154,20090323.000000,0.0,35.310001,35.299999,35.549999,34.650002,0.0,0.010000,7652390.000000,268433977.460000);
	SaveDayData(155,20090324.000000,0.0,34.990002,35.770000,36.500000,34.500000,0.0,-0.320000,10820394.000000,381377848.980000);
	SaveDayData(156,20090325.000000,0.0,33.599998,34.990002,34.990002,33.580002,0.0,-1.390000,7212413.000000,246226047.820000);
	SaveDayData(157,20090326.000000,0.0,33.759998,33.590000,33.959999,32.660000,0.0,0.160000,10684124.000000,355432016.310000);
	SaveDayData(158,20090327.000000,0.0,33.470001,34.000000,34.700001,33.360001,0.0,-0.290000,9039199.000000,307559380.640000);
	SaveDayData(159,20090330.000000,0.0,34.209999,33.689999,34.660000,33.450001,0.0,0.740000,8767389.000000,298088745.140000);
	SaveDayData(160,20090331.000000,0.0,35.340000,33.889999,35.419998,33.500000,0.0,1.130000,10800193.000000,375149483.220000);
	SaveDayData(161,20090401.000000,0.0,35.790001,35.360001,36.349998,35.000000,0.0,0.450000,10922248.000000,391940618.830000);
	SaveDayData(162,20090402.000000,0.0,35.650002,35.820000,36.180000,35.500000,0.0,-0.140000,6676561.000000,239276854.060000);
	SaveDayData(163,20090403.000000,0.0,34.500000,35.660000,35.889999,34.349998,0.0,-1.150000,9472326.000000,330277792.990000);
	SaveDayData(164,20090407.000000,0.0,34.650002,34.500000,35.090000,34.099998,0.0,0.150000,4731509.000000,162924624.300000);
	SaveDayData(165,20090408.000000,0.0,33.700001,34.500000,34.500000,33.660000,0.0,-0.950000,4855343.000000,165579073.030000);
	SaveDayData(166,20090409.000000,0.0,34.330002,33.750000,34.419998,33.750000,0.0,0.630000,4049906.000000,138359127.200000);
	SaveDayData(167,20090410.000000,0.0,35.419998,34.520000,35.549999,34.520000,0.0,1.090000,6814718.000000,239475437.640000);
	SaveDayData(168,20090413.000000,0.0,35.000000,35.619999,36.189999,34.980000,0.0,-0.420000,10792947.000000,382935859.770000);
	SaveDayData(169,20090414.000000,0.0,36.799999,35.029999,36.880001,35.000000,0.0,1.800000,13449021.000000,484666798.010000);
	SaveDayData(170,20090415.000000,0.0,39.049999,36.490002,39.650002,35.849998,0.0,2.250000,16145450.000000,608829618.830000);
	SaveDayData(171,20090416.000000,0.0,38.270000,39.000000,39.040001,37.500000,0.0,-0.780000,10625375.000000,409073768.410000);
	SaveDayData(172,20090417.000000,0.0,37.650002,38.279999,38.939999,37.560001,0.0,-0.620000,4873783.000000,185650299.080000);
	SaveDayData(173,20090420.000000,0.0,38.410000,37.599998,38.790001,37.009998,0.0,0.760000,6232547.000000,237399044.930000);
	SaveDayData(174,20090421.000000,0.0,38.000000,37.820000,38.680000,37.669998,0.0,-0.410000,4131984.000000,157500031.210000);
	SaveDayData(175,20090422.000000,0.0,38.000000,38.299999,40.099998,37.000000,0.0,0.000000,12336965.000000,480615773.260000);
	SaveDayData(176,20090423.000000,0.0,37.400002,37.500000,38.500000,36.849998,0.0,-0.600000,6103337.000000,228712022.380000);
	SaveDayData(177,20090424.000000,0.0,37.349998,37.549999,38.520000,37.000000,0.0,-0.050000,6890823.000000,261792331.080000);
	SaveDayData(178,20090427.000000,0.0,37.349998,36.950001,38.000000,36.650002,0.0,0.000000,5107402.000000,190114283.980000);
	SaveDayData(179,20090428.000000,0.0,37.360001,37.020000,37.529999,36.400002,0.0,0.010000,2988630.000000,110662012.050000);
	SaveDayData(180,20090429.000000,0.0,38.200001,37.450001,38.680000,37.119999,0.0,0.840000,4077032.000000,155444228.400000);
	SaveDayData(181,20090430.000000,0.0,38.200001,38.380001,38.959999,38.049999,0.0,0.000000,3799179.000000,146404850.900000);
	SaveDayData(182,20090504.000000,0.0,39.860001,38.450001,40.200001,38.320000,0.0,1.660000,7211203.000000,286405451.470000);
	SaveDayData(183,20090505.000000,0.0,39.779999,40.000000,40.299999,39.310001,0.0,-0.080000,7728754.000000,307355283.870000);
	SaveDayData(184,20090506.000000,0.0,39.049999,39.700001,39.980000,38.980000,0.0,-0.730000,7909246.000000,310346030.010000);
	SaveDayData(185,20090507.000000,0.0,38.150002,39.389999,39.430000,38.139999,0.0,-0.900000,8186237.000000,315788665.550000);
	SaveDayData(186,20090508.000000,0.0,38.500000,38.150002,38.509998,37.099998,0.0,0.350000,10671672.000000,401935882.250000);
	SaveDayData(187,20090511.000000,0.0,37.099998,38.560001,38.560001,37.070000,0.0,-1.400000,12229688.000000,458561256.070000);
	SaveDayData(188,20090512.000000,0.0,36.900002,36.799999,37.380001,35.680000,0.0,-0.200000,13348015.000000,485522800.190000);
	SaveDayData(189,20090513.000000,0.0,36.459999,37.000000,37.020000,35.970001,0.0,-0.440000,10691165.000000,387207193.100000);
	SaveDayData(190,20090514.000000,0.0,36.700001,36.490002,37.080002,36.459999,0.0,0.240000,8518022.000000,313147498.120000);
	SaveDayData(191,20090515.000000,0.0,36.490002,36.900002,37.180000,36.000000,0.0,-0.210000,9653318.000000,350868197.680000);
	SaveDayData(192,20090518.000000,0.0,36.869999,36.700001,36.900002,35.849998,0.0,0.380000,5241986.000000,190844152.160000);
	SaveDayData(193,20090519.000000,0.0,36.869999,36.869999,36.869999,36.869999,0.0,0.000000,0.000000,0.000000);
	SaveDayData(194,20090520.000000,0.0,37.220001,37.060001,38.000000,37.060001,0.0,0.350000,14313303.000000,537355463.310000);
	SaveDayData(195,20090521.000000,0.0,35.619999,37.000000,37.220001,35.599998,0.0,-1.600000,8005315.000000,288579673.110000);
	SaveDayData(196,20090522.000000,0.0,35.380001,35.619999,36.090000,35.180000,0.0,-0.240000,8836091.000000,314610640.470000);
	SaveDayData(197,20090525.000000,0.0,35.080002,34.990002,35.349998,34.509998,0.0,-0.300000,6382906.000000,223010913.940000);
	SaveDayData(198,20090526.000000,0.0,35.700001,35.099998,36.400002,35.099998,0.0,0.620000,8267113.000000,296538899.020000);
	SaveDayData(199,20090527.000000,0.0,35.520000,36.160000,36.299999,35.310001,0.0,-0.180000,7294712.000000,259418060.000000);
	SaveDayData(200,20090601.000000,0.0,35.770000,35.990002,36.279999,35.599998,0.0,0.250000,13604702.000000,486896842.210000);
	SaveDayData(201,20090602.000000,0.0,36.630001,35.820000,36.959999,35.770000,0.0,0.860000,16862250.000000,610146565.210000);
	SaveDayData(202,20090603.000000,0.0,36.799999,36.660000,36.869999,36.279999,0.0,0.170000,13615049.000000,497455594.540000);
	SaveDayData(203,20090604.000000,0.0,35.950001,36.799999,36.849998,35.759998,0.0,-0.850000,12514548.000000,452781796.840000);
	SaveDayData(204,20090605.000000,0.0,26.309999,27.450001,27.660000,26.299999,0.0,-1.110000,15987483.000000,426488967.420000);
	SaveDayData(205,20090608.000000,0.0,25.700001,26.330000,26.450001,25.660000,0.0,-0.610000,13552803.000000,351615689.240000);
	SaveDayData(206,20090609.000000,0.0,26.150000,25.620001,26.150000,25.410000,0.0,0.450000,12874365.000000,332108933.160000);
	SaveDayData(207,20090610.000000,0.0,26.799999,26.299999,27.309999,25.900000,0.0,0.650000,11700777.000000,313734229.290000);
	SaveDayData(208,20090611.000000,0.0,27.510000,27.010000,28.180000,27.010000,0.0,0.710000,19393629.000000,539277542.760000);
	SaveDayData(209,20090612.000000,0.0,27.510000,27.490000,28.150000,27.200001,0.0,0.000000,14935771.000000,415390510.460000);
	SaveDayData(210,20090615.000000,0.0,27.719999,27.879999,27.879999,27.080000,0.0,0.210000,7531265.000000,206913490.770000);
	SaveDayData(211,20090616.000000,0.0,27.830000,27.500000,28.160000,27.250000,0.0,0.110000,6431232.000000,178855645.430000);
	SaveDayData(212,20090617.000000,0.0,28.580000,28.150000,29.030001,28.010000,0.0,0.750000,15997751.000000,458671747.220000);
	SaveDayData(213,20090618.000000,0.0,28.600000,28.600000,28.900000,28.290001,0.0,0.020000,8306709.000000,237061996.640000);
	SaveDayData(214,20090619.000000,0.0,28.459999,28.600000,28.799999,28.330000,0.0,-0.140000,7703445.000000,220423371.500000);
	SaveDayData(215,20090622.000000,0.0,28.049999,28.549999,28.750000,27.780001,0.0,-0.410000,10285837.000000,290967660.180000);
	SaveDayData(216,20090623.000000,0.0,27.610001,27.799999,28.180000,27.580000,0.0,-0.440000,7591102.000000,211562031.740000);
	SaveDayData(217,20090624.000000,0.0,28.180000,27.700001,28.500000,27.000000,0.0,0.570000,14037007.000000,386519395.200000);
	SaveDayData(218,20090625.000000,0.0,28.600000,28.250000,28.950001,27.930000,0.0,0.420000,12177371.000000,346932199.300000);
	SaveDayData(219,20090626.000000,0.0,28.350000,28.600000,28.840000,28.100000,0.0,-0.250000,4534185.000000,128591912.110000);
	SaveDayData(220,20090629.000000,0.0,28.100000,28.320000,28.559999,27.770000,0.0,-0.250000,8542254.000000,240173626.910000);
	SaveDayData(221,20090630.000000,0.0,28.100000,28.100000,28.100000,28.100000,0.0,0.000000,0.000000,0.000000);
	SaveDayData(222,20090701.000000,0.0,28.969999,27.950001,29.049999,27.799999,0.0,0.870000,17947701.000000,516859555.960000);
	SaveDayData(223,20090702.000000,0.0,29.000000,29.010000,29.549999,28.700001,0.0,0.030000,15417953.000000,450286454.770000);
	SaveDayData(224,20090703.000000,0.0,28.809999,28.980000,29.450001,28.500000,0.0,-0.190000,8647256.000000,251117471.580000);
	SaveDayData(225,20090706.000000,0.0,29.150000,28.809999,29.830000,28.809999,0.0,0.340000,20592373.000000,603636357.030000);
	SaveDayData(226,20090707.000000,0.0,31.299999,29.299999,31.850000,29.299999,0.0,2.150000,30039634.000000,922534038.950000);
	SaveDayData(227,20090708.000000,0.0,30.650000,30.990000,31.570000,30.100000,0.0,-0.650000,14618269.000000,449394404.240000);
	SaveDayData(228,20090709.000000,0.0,31.820000,30.940001,32.060001,30.660000,0.0,1.170000,14694244.000000,464822169.740000);
	SaveDayData(229,20090710.000000,0.0,31.850000,31.799999,32.340000,31.610001,0.0,0.030000,8676902.000000,277271388.040000);
	SaveDayData(230,20090713.000000,0.0,31.900000,31.850000,32.799999,31.830000,0.0,0.050000,6747312.000000,218440943.890000);
	SaveDayData(231,20090714.000000,0.0,32.299999,31.879999,32.740002,31.660000,0.0,0.400000,6764847.000000,218220902.550000);
	SaveDayData(232,20090715.000000,0.0,31.770000,32.400002,33.009998,31.680000,0.0,-0.530000,9142616.000000,294549996.080000);
	SaveDayData(233,20090716.000000,0.0,31.350000,32.200001,32.400002,31.129999,0.0,-0.420000,8578840.000000,271110215.680000);
	SaveDayData(234,20090717.000000,0.0,31.809999,31.350000,32.500000,31.350000,0.0,0.460000,9993729.000000,321626798.280000);
	SaveDayData(235,20090720.000000,0.0,33.500000,32.299999,34.299999,31.910000,0.0,1.690000,14033915.000000,468956636.970000);
	SaveDayData(236,20090721.000000,0.0,33.410000,33.689999,34.000000,32.889999,0.0,-0.090000,9064419.000000,303723908.780000);
	SaveDayData(237,20090722.000000,0.0,33.900002,33.299999,34.000000,33.169998,0.0,0.490000,5085483.000000,170964833.050000);
	SaveDayData(238,20090723.000000,0.0,34.959999,33.849998,35.150002,33.310001,0.0,1.060000,13134664.000000,455473386.610000);
	SaveDayData(239,20090724.000000,0.0,34.490002,35.000000,35.490002,34.169998,0.0,-0.470000,7138937.000000,247334664.250000);
	SaveDayData(240,20090727.000000,0.0,34.700001,34.650002,34.959999,34.299999,0.0,0.210000,7041446.000000,243267735.190000);
	SaveDayData(241,20090728.000000,0.0,33.849998,34.849998,34.930000,33.740002,0.0,-0.850000,9841450.000000,334754110.720000);
	SaveDayData(242,20090729.000000,0.0,32.799999,33.910000,34.099998,31.010000,0.0,-1.050000,14318565.000000,476099482.730000);
	SaveDayData(243,20090730.000000,0.0,33.779999,32.790001,34.029999,32.790001,0.0,0.980000,11334186.000000,380014428.640000);
	SaveDayData(244,20090731.000000,0.0,34.150002,34.099998,34.299999,33.599998,0.0,0.370000,5895945.000000,200486774.840000);
	SaveDayData(245,20090803.000000,0.0,34.349998,34.189999,34.450001,33.549999,0.0,0.200000,7202914.000000,244987882.640000);
	SaveDayData(246,20090804.000000,0.0,33.590000,34.599998,34.680000,32.900002,0.0,-0.760000,8448297.000000,282898785.690000);
	SaveDayData(247,20090805.000000,0.0,33.110001,33.599998,33.599998,32.820000,0.0,-0.480000,8726027.000000,289453456.550000);
	SaveDayData(248,20090806.000000,0.0,33.599998,33.119999,34.500000,32.910000,0.0,0.490000,11701771.000000,395236273.130000);
	SaveDayData(249,20090807.000000,0.0,33.529999,33.200001,34.070000,32.650002,0.0,-0.070000,11463178.000000,381083056.840000);
	SaveDayData(250,20090810.000000,0.0,35.770000,33.610001,35.889999,33.610001,0.0,2.240000,24838138.000000,872268350.300000);
	SaveDayData(251,20090811.000000,0.0,36.220001,35.700001,37.509998,35.230000,0.0,0.450000,12770734.000000,468405753.540000);
	SaveDayData(252,20090812.000000,0.0,35.549999,36.200001,36.880001,35.220001,0.0,-0.670000,9454577.000000,339084391.400000);
	SaveDayData(253,20090813.000000,0.0,35.709999,35.410000,35.860001,34.799999,0.0,0.160000,9120361.000000,322234020.240000);
	SaveDayData(254,20090814.000000,0.0,34.200001,35.290001,36.900002,33.830002,0.0,-1.510000,11970335.000000,429561363.600000);
	SaveDayData(255,20090817.000000,0.0,32.099998,34.200001,35.080002,31.549999,0.0,-2.100000,14939279.000000,485350623.260000);
	SaveDayData(256,20090818.000000,0.0,31.690001,32.000000,32.919998,31.299999,0.0,-0.410000,8239409.000000,261484879.620000);
	SaveDayData(257,20090819.000000,0.0,32.900002,31.840000,33.520000,31.840000,0.0,1.210000,14735315.000000,484572706.330000);
	SaveDayData(258,20090820.000000,0.0,33.299999,32.599998,34.090000,32.000000,0.0,0.400000,11032288.000000,370019471.710000);
	SaveDayData(259,20090821.000000,0.0,34.900002,33.580002,35.000000,33.310001,0.0,1.600000,10421875.000000,360805398.610000);
	SaveDayData(260,20090824.000000,0.0,35.750000,34.900002,36.250000,34.599998,0.0,0.850000,8610473.000000,308200039.980000);
	SaveDayData(261,20090825.000000,0.0,36.060001,35.750000,36.349998,34.000000,0.0,0.310000,9560031.000000,337457486.090000);
	SaveDayData(262,20090826.000000,0.0,36.529999,35.950001,37.130001,35.650002,0.0,0.470000,8221309.000000,302604726.040000);
	SaveDayData(263,20090827.000000,0.0,36.900002,36.740002,37.500000,36.099998,0.0,0.370000,7052877.000000,260401434.060000);
	SaveDayData(264,20090828.000000,0.0,35.560001,36.849998,36.900002,35.000000,0.0,-1.340000,10484933.000000,372301702.290000);
	SaveDayData(265,20090831.000000,0.0,33.000000,35.560001,35.560001,32.950001,0.0,-2.560000,16149997.000000,540129746.670000);
	SaveDayData(266,20090901.000000,0.0,34.299999,32.540001,34.639999,32.500000,0.0,1.300000,10766502.000000,364765712.390000);
	SaveDayData(267,20090902.000000,0.0,34.299999,34.200001,34.980000,33.400002,0.0,0.000000,4302825.000000,146992852.190000);
	SaveDayData(268,20090903.000000,0.0,35.200001,34.299999,35.250000,34.180000,0.0,0.900000,8158395.000000,284461548.960000);
	SaveDayData(269,20090904.000000,0.0,35.660000,35.009998,35.919998,34.799999,0.0,0.460000,4676321.000000,165115323.080000);
	SaveDayData(270,20090907.000000,0.0,36.419998,35.540001,37.209999,35.500000,0.0,0.760000,10000172.000000,364297775.400000);
	SaveDayData(271,20090908.000000,0.0,36.919998,36.349998,37.200001,35.799999,0.0,0.500000,6091153.000000,223356957.590000);
	SaveDayData(272,20090909.000000,0.0,37.000000,36.889999,37.150002,36.180000,0.0,0.080000,8363529.000000,306885069.140000);
	SaveDayData(273,20090910.000000,0.0,36.310001,36.500000,37.020000,36.200001,0.0,-0.690000,2892812.000000,106054757.610000);
	SaveDayData(274,20090911.000000,0.0,36.480000,36.299999,36.849998,35.900002,0.0,0.170000,4333512.000000,157179548.460000);
	SaveDayData(275,20090914.000000,0.0,38.400002,36.580002,38.689999,36.080002,0.0,1.920000,10993468.000000,414310922.620000);
	SaveDayData(276,20090915.000000,0.0,38.320000,38.380001,39.110001,37.680000,0.0,-0.080000,6477497.000000,248798815.960000);
	SaveDayData(277,20090916.000000,0.0,38.330002,38.500000,39.310001,38.250000,0.0,0.010000,7292723.000000,282855377.010000);
	SaveDayData(278,20090917.000000,0.0,39.299999,38.349998,40.099998,38.349998,0.0,0.970000,8613305.000000,337587244.880000);
	SaveDayData(279,20090918.000000,0.0,37.910000,39.320000,39.880001,37.799999,0.0,-1.390000,4748828.000000,184480090.350000);
	SaveDayData(280,20090921.000000,0.0,38.590000,37.970001,39.000000,37.660000,0.0,0.680000,5428170.000000,207644894.290000);
	SaveDayData(281,20090922.000000,0.0,38.490002,38.610001,40.000000,38.230000,0.0,-0.100000,8919238.000000,350138824.710000);
	SaveDayData(282,20090923.000000,0.0,37.599998,38.500000,38.990002,37.349998,0.0,-0.890000,6602327.000000,250613673.310000);
	SaveDayData(283,20090924.000000,0.0,36.599998,37.599998,38.000000,36.490002,0.0,-1.000000,4993679.000000,185213708.550000);
	SaveDayData(284,20090925.000000,0.0,36.459999,36.599998,37.770000,36.400002,0.0,-0.140000,5057696.000000,188293785.740000);
	SaveDayData(285,20090928.000000,0.0,36.500000,36.480000,37.299999,36.279999,0.0,0.040000,2960382.000000,108708350.290000);
	SaveDayData(286,20090929.000000,0.0,36.900002,36.610001,37.599998,36.500000,0.0,0.400000,5094384.000000,188952623.030000);
	SaveDayData(287,20090930.000000,0.0,38.180000,37.020000,38.480000,37.020000,0.0,1.280000,3731421.000000,142108454.140000);
	SaveDayData(288,20091009.000000,0.0,38.990002,39.349998,40.259998,38.950001,0.0,0.810000,8905932.000000,353601524.950000);
	SaveDayData(289,20091012.000000,0.0,39.150002,39.000000,39.700001,38.849998,0.0,0.160000,3708166.000000,145565936.220000);
	SaveDayData(290,20091013.000000,0.0,39.400002,39.150002,39.450001,38.599998,0.0,0.250000,3719399.000000,144963002.140000);
	SaveDayData(291,20091014.000000,0.0,38.700001,39.389999,39.389999,38.650002,0.0,-0.700000,8647343.000000,336798575.380000);
	SaveDayData(292,20091015.000000,0.0,39.000000,39.150002,39.799999,38.680000,0.0,0.300000,9392391.000000,370601023.830000);
	SaveDayData(293,20091016.000000,0.0,38.200001,38.959999,39.299999,37.849998,0.0,-0.800000,5846636.000000,223949473.870000);
	SaveDayData(294,20091019.000000,0.0,38.299999,38.090000,38.880001,37.509998,0.0,0.100000,10207586.000000,391574005.380000);
	SaveDayData(295,20091020.000000,0.0,39.099998,38.660000,39.150002,38.660000,0.0,0.800000,10666338.000000,415207791.570000);
	SaveDayData(296,20091021.000000,0.0,38.200001,39.349998,39.450001,38.020000,0.0,-0.900000,11741864.000000,454110632.700000);
	SaveDayData(297,20091022.000000,0.0,38.080002,38.220001,38.740002,37.799999,0.0,-0.120000,6141370.000000,233467081.410000);
	SaveDayData(298,20091023.000000,0.0,38.240002,38.099998,38.419998,37.900002,0.0,0.160000,8137787.000000,310539790.780000);
	SaveDayData(299,20091026.000000,0.0,37.700001,38.180000,38.290001,37.029999,0.0,-0.540000,11080697.000000,416542925.770000);
	SaveDayData(300,20091027.000000,0.0,38.360001,37.500000,38.650002,37.400002,0.0,0.660000,9233938.000000,353312351.460000);
	SaveDayData(301,20091028.000000,0.0,38.360001,38.400002,38.520000,37.700001,0.0,0.000000,8052666.000000,306854277.320000);
	SaveDayData(302,20091029.000000,0.0,37.450001,38.060001,38.060001,37.349998,0.0,-0.910000,7115697.000000,267415639.420000);
	SaveDayData(303,20091030.000000,0.0,37.349998,37.610001,38.049999,37.299999,0.0,-0.100000,6834470.000000,257914723.840000);
	SaveDayData(304,20091102.000000,0.0,38.270000,37.000000,38.500000,36.700001,0.0,0.920000,8356375.000000,315112971.280000);
	SaveDayData(305,20091103.000000,0.0,38.299999,38.520000,38.580002,37.680000,0.0,0.030000,11149028.000000,424368370.260000);
	SaveDayData(306,20091104.000000,0.0,39.139999,38.299999,39.389999,37.910000,0.0,0.840000,14060581.000000,546838897.150000);
	SaveDayData(307,20091105.000000,0.0,39.099998,39.000000,39.540001,38.709999,0.0,-0.040000,7005038.000000,274553074.070000);
	SaveDayData(308,20091106.000000,0.0,39.049999,39.160000,39.799999,39.009998,0.0,-0.050000,6195498.000000,244005433.370000);
	SaveDayData(309,20091109.000000,0.0,39.250000,39.130001,39.470001,38.660000,0.0,0.200000,6652290.000000,260569905.240000);
	SaveDayData(310,20091110.000000,0.0,38.799999,39.349998,39.490002,38.720001,0.0,-0.450000,7809287.000000,303693327.650000);
	SaveDayData(311,20091111.000000,0.0,38.689999,38.799999,39.320000,38.639999,0.0,-0.110000,6255835.000000,243674998.960000);
	SaveDayData(312,20091112.000000,0.0,38.799999,38.750000,39.049999,38.380001,0.0,0.110000,6879054.000000,265940439.890000);
	SaveDayData(313,20091113.000000,0.0,39.299999,38.750000,39.500000,38.500000,0.0,0.500000,10197469.000000,397993765.970000);
	SaveDayData(314,20091116.000000,0.0,40.750000,39.700001,41.259998,39.650002,0.0,1.450000,11945321.000000,487608200.230000);
	SaveDayData(315,20091117.000000,0.0,40.490002,40.750000,40.990002,39.900002,0.0,-0.260000,7516285.000000,302337082.650000);
	SaveDayData(316,20091118.000000,0.0,40.910000,40.509998,41.060001,40.000000,0.0,0.420000,8063897.000000,326119287.580000);
	SaveDayData(317,20091119.000000,0.0,40.380001,41.000000,41.200001,39.980000,0.0,-0.530000,7003141.000000,282958702.830000);
	SaveDayData(318,20091120.000000,0.0,40.200001,40.279999,40.830002,40.110001,0.0,-0.180000,6768883.000000,274149630.030000);
	SaveDayData(319,20091123.000000,0.0,39.900002,40.200001,40.480000,39.639999,0.0,-0.300000,8328893.000000,332823280.220000);
	SaveDayData(320,20091124.000000,0.0,38.439999,40.000000,40.080002,38.439999,0.0,-1.460000,11849771.000000,467269982.100000);
	SaveDayData(321,20091125.000000,0.0,39.000000,38.500000,39.299999,38.099998,0.0,0.560000,8723539.000000,336799908.010000);
	SaveDayData(322,20091126.000000,0.0,37.650002,39.310001,39.400002,37.549999,0.0,-1.350000,8088606.000000,310202176.720000);
	SaveDayData(323,20091127.000000,0.0,37.540001,37.500000,38.349998,36.799999,0.0,-0.110000,9291045.000000,349750689.690000);
	SaveDayData(324,20091130.000000,0.0,39.290001,38.099998,39.400002,38.000000,0.0,1.750000,12245740.000000,474642148.130000);
	SaveDayData(325,20091201.000000,0.0,39.410000,39.139999,39.599998,38.810001,0.0,0.120000,6808037.000000,267903404.090000);
	SaveDayData(326,20091202.000000,0.0,39.320000,39.599998,39.799999,39.049999,0.0,-0.090000,8789644.000000,345969868.630000);
	SaveDayData(327,20091203.000000,0.0,39.360001,39.320000,39.500000,38.799999,0.0,0.040000,6272029.000000,245295996.710000);
	SaveDayData(328,20091204.000000,0.0,39.599998,38.980000,39.919998,38.700001,0.0,0.240000,8980810.000000,353905643.920000);
	SaveDayData(329,20091207.000000,0.0,39.700001,39.650002,40.099998,39.209999,0.0,0.100000,8089913.000000,321652045.640000);
	SaveDayData(330,20091208.000000,0.0,39.349998,39.770000,39.869999,38.980000,0.0,-0.350000,5965613.000000,234824115.900000);
	SaveDayData(331,20091209.000000,0.0,39.939999,39.150002,40.250000,39.000000,0.0,0.590000,9368672.000000,372104205.510000);
	SaveDayData(332,20091210.000000,0.0,40.310001,39.959999,41.020000,39.959999,0.0,0.370000,8266745.000000,334946254.260000);
	SaveDayData(333,20091211.000000,0.0,39.939999,40.310001,40.560001,39.830002,0.0,-0.370000,5129154.000000,206253732.200000);
	SaveDayData(334,20091214.000000,0.0,40.980000,39.779999,41.209999,39.299999,0.0,1.040000,6118771.000000,246890611.550000);
	SaveDayData(335,20091215.000000,0.0,41.950001,40.799999,42.509998,40.520000,0.0,0.970000,14962843.000000,625245619.350000);
	SaveDayData(336,20091216.000000,0.0,41.299999,41.700001,43.080002,41.200001,0.0,-0.650000,9266363.000000,390649838.010000);
	SaveDayData(337,20091217.000000,0.0,42.990002,41.349998,43.099998,41.119999,0.0,1.690000,8242749.000000,347470384.320000);
	SaveDayData(338,20091218.000000,0.0,42.180000,42.610001,43.259998,41.799999,0.0,-0.810000,11900229.000000,508867741.610000);
	SaveDayData(339,20091221.000000,0.0,42.049999,42.209999,42.689999,41.400002,0.0,-0.130000,6123663.000000,256263613.900000);
	SaveDayData(340,20091222.000000,0.0,41.500000,42.200001,43.080002,40.500000,0.0,-0.550000,10309117.000000,433870298.010000);
	SaveDayData(341,20091223.000000,0.0,42.500000,41.400002,43.259998,41.299999,0.0,1.000000,10176885.000000,433791558.360000);
	SaveDayData(342,20091224.000000,0.0,44.330002,42.520000,44.790001,42.520000,0.0,1.830000,11501392.000000,508454760.310000);
	SaveDayData(343,20091225.000000,0.0,44.259998,44.250000,45.099998,43.619999,0.0,-0.070000,7980840.000000,355873460.720000);
	SaveDayData(344,20091228.000000,0.0,44.360001,43.950001,44.700001,43.599998,0.0,0.100000,7142422.000000,314647447.680000);
	SaveDayData(345,20091229.000000,0.0,44.360001,44.360001,44.360001,44.360001,0.0,0.000000,0.000000,0.000000);
	SaveDayData(346,20091230.000000,0.0,43.779999,44.299999,44.299999,43.009998,0.0,-0.580000,9124862.000000,397713334.860000);
	SaveDayData(347,20091231.000000,0.0,44.869999,43.500000,45.209999,43.299999,0.0,1.090000,7636294.000000,339761759.400000);
	SaveDayData(348,20100104.000000,0.0,45.400002,45.040001,45.500000,44.209999,0.0,0.530000,11721358.000000,528042354.620000);
	SaveDayData(349,20100105.000000,0.0,46.250000,45.470001,46.680000,44.930000,0.0,0.850000,14743225.000000,678664521.820000);
	SaveDayData(350,20100106.000000,0.0,45.299999,46.299999,46.580002,45.200001,0.0,-0.950000,10429259.000000,477835188.720000);
	SaveDayData(351,20100107.000000,0.0,43.209999,45.209999,45.240002,42.730000,0.0,-2.090000,18683708.000000,815641663.000000);
	SaveDayData(352,20100108.000000,0.0,43.389999,43.200001,43.980000,42.509998,0.0,0.180000,13747732.000000,592013802.270000);
	SaveDayData(353,20100111.000000,0.0,43.500000,44.000000,44.980000,42.700001,0.0,0.110000,13888192.000000,604897533.060000);
	SaveDayData(354,20100112.000000,0.0,46.610001,43.200001,46.630001,43.139999,0.0,3.110000,21228229.000000,967553375.170000);
	SaveDayData(355,20100113.000000,0.0,48.599998,45.730000,48.779999,45.400002,0.0,1.990000,27538314.000000,1311473717.960000);
	SaveDayData(356,20100114.000000,0.0,48.250000,48.490002,48.970001,47.849998,0.0,-0.350000,15084491.000000,729296868.650000);
	SaveDayData(357,20100115.000000,0.0,47.299999,48.200001,48.599998,46.799999,0.0,-0.950000,8486045.000000,402046738.720000);
	SaveDayData(358,20100118.000000,0.0,49.099998,47.000000,49.150002,45.939999,0.0,1.800000,12414331.000000,593801572.550000);
	SaveDayData(359,20100119.000000,0.0,47.500000,48.799999,49.000000,47.500000,0.0,-1.600000,10168750.000000,489753808.470000);
	SaveDayData(360,20100120.000000,0.0,45.650002,47.400002,47.400002,45.549999,0.0,-1.850000,10267765.000000,478125140.680000);
	SaveDayData(361,20100121.000000,0.0,45.650002,45.759998,46.110001,44.599998,0.0,0.000000,7566544.000000,343798621.130000);
	SaveDayData(362,20100125.000000,0.0,44.029999,44.000000,45.250000,43.709999,0.0,-0.030000,7427586.000000,331897981.330000);
	SaveDayData(363,20100126.000000,0.0,43.860001,44.009998,44.189999,42.580002,0.0,-0.170000,8934274.000000,386645857.070000);
	SaveDayData(364,20100127.000000,0.0,43.400002,43.779999,44.549999,42.950001,0.0,-0.460000,9586003.000000,417491615.120000);
	SaveDayData(365,20100128.000000,0.0,43.200001,43.599998,43.900002,42.990002,0.0,-0.200000,4452947.000000,193622401.600000);
	SaveDayData(366,20100129.000000,0.0,43.430000,43.090000,44.299999,42.860001,0.0,0.230000,8608217.000000,377469747.400000);
	SaveDayData(367,20100201.000000,0.0,42.099998,43.639999,44.290001,40.950001,0.0,-1.330000,15843014.000000,662808437.840000);
	SaveDayData(368,20100202.000000,0.0,41.299999,42.099998,43.009998,41.139999,0.0,-0.800000,10221699.000000,430973172.650000);
	SaveDayData(369,20100203.000000,0.0,42.200001,41.160000,42.689999,40.680000,0.0,0.900000,8894706.000000,370844369.260000);
	SaveDayData(370,20100204.000000,0.0,43.000000,42.049999,43.099998,41.709999,0.0,0.800000,8043983.000000,344228759.440000);
	SaveDayData(371,20100205.000000,0.0,42.700001,42.299999,43.080002,42.000000,0.0,-0.300000,8017370.000000,341487218.850000);
	SaveDayData(372,20100208.000000,0.0,43.000000,42.700001,43.540001,42.220001,0.0,0.300000,5294084.000000,227535176.280000);
	SaveDayData(373,20100209.000000,0.0,42.410000,42.669998,42.950001,41.900002,0.0,-0.590000,4925066.000000,209305202.470000);
	SaveDayData(374,20100210.000000,0.0,43.459999,42.520000,43.680000,42.509998,0.0,1.050000,8621492.000000,371484277.420000);
	SaveDayData(375,20100211.000000,0.0,42.799999,42.849998,43.320000,42.709999,0.0,-0.660000,12184768.000000,523774428.070000);
	SaveDayData(376,20100212.000000,0.0,42.500000,42.790001,43.150002,42.400002,0.0,-0.300000,9479195.000000,405156152.970000);
	SaveDayData(377,20100222.000000,0.0,42.520000,42.439999,42.750000,42.000000,0.0,0.020000,5744207.000000,243564091.650000);
	SaveDayData(378,20100223.000000,0.0,43.950001,42.450001,44.360001,42.400002,0.0,1.430000,8573396.000000,372830327.440000);
	SaveDayData(379,20100224.000000,0.0,45.849998,43.700001,46.160000,43.500000,0.0,1.900000,8723998.000000,396628376.750000);
	SaveDayData(380,20100225.000000,0.0,45.959999,47.000000,47.000000,45.750000,0.0,0.110000,7240667.000000,334624035.380000);
	SaveDayData(381,20100226.000000,0.0,46.139999,45.959999,46.200001,45.099998,0.0,0.180000,5403744.000000,248476239.440000);
	SaveDayData(382,20100301.000000,0.0,45.990002,46.099998,46.750000,45.799999,0.0,-0.150000,5856936.000000,269622332.650000);
	SaveDayData(383,20100302.000000,0.0,45.900002,45.799999,46.340000,45.299999,0.0,-0.090000,4849112.000000,222289038.050000);
	SaveDayData(384,20100303.000000,0.0,46.119999,45.650002,46.330002,45.349998,0.0,0.220000,4376610.000000,200730781.460000);
	SaveDayData(385,20100304.000000,0.0,45.000000,46.099998,47.250000,45.000000,0.0,-1.120000,5002328.000000,230217074.140000);
	SaveDayData(386,20100305.000000,0.0,45.049999,44.880001,45.849998,44.599998,0.0,0.050000,4453334.000000,201123994.360000);
	SaveDayData(387,20100308.000000,0.0,44.480000,45.009998,45.049999,44.169998,0.0,-0.570000,6560915.000000,291394807.620000);
	SaveDayData(388,20100309.000000,0.0,44.130001,44.490002,44.779999,43.880001,0.0,-0.350000,5216612.000000,230298534.610000);
	SaveDayData(389,20100310.000000,0.0,44.180000,44.139999,44.380001,43.799999,0.0,0.050000,5967881.000000,263333687.270000);
	SaveDayData(390,20100311.000000,0.0,44.400002,44.340000,44.630001,43.700001,0.0,0.220000,3645486.000000,160492878.240000);
	SaveDayData(391,20100312.000000,0.0,42.980000,44.500000,44.500000,42.700001,0.0,-1.420000,6871334.000000,297056843.080000);
	SaveDayData(392,20100315.000000,0.0,41.900002,42.880001,42.880001,41.500000,0.0,-1.080000,7015111.000000,294022375.350000);
	SaveDayData(393,20100316.000000,0.0,42.310001,41.900002,42.500000,41.410000,0.0,0.410000,3526672.000000,147704813.320000);
	SaveDayData(394,20100317.000000,0.0,43.160000,42.500000,43.400002,42.080002,0.0,0.850000,4904067.000000,209336800.750000);
	SaveDayData(395,20100318.000000,0.0,43.279999,43.439999,43.799999,43.130001,0.0,0.120000,4656959.000000,202529126.760000);
	SaveDayData(396,20100319.000000,0.0,43.099998,43.299999,43.549999,42.500000,0.0,-0.180000,5290578.000000,226775486.370000);
	SaveDayData(397,20100322.000000,0.0,42.849998,43.270000,43.270000,42.380001,0.0,-0.250000,5523894.000000,235832085.430000);
	SaveDayData(398,20100323.000000,0.0,42.320000,42.939999,43.349998,42.240002,0.0,-0.530000,4581509.000000,195438662.020000);
	SaveDayData(399,20100324.000000,0.0,42.689999,42.400002,43.150002,42.160000,0.0,0.370000,6776393.000000,289498314.600000);
	SaveDayData(400,20100325.000000,0.0,42.869999,42.709999,43.029999,42.230000,0.0,0.180000,5422553.000000,231677501.840000);
	SaveDayData(401,20100326.000000,0.0,43.299999,43.009998,43.660000,42.639999,0.0,0.430000,6935177.000000,299817341.060000);
	SaveDayData(402,20100329.000000,0.0,43.320000,43.459999,43.599998,42.910000,0.0,0.020000,8203054.000000,355480428.300000);
	SaveDayData(403,20100330.000000,0.0,43.320000,43.320000,43.320000,43.320000,0.0,0.000000,0.000000,0.000000);
	SaveDayData(404,20100331.000000,0.0,42.500000,43.580002,43.599998,42.279999,0.0,-0.820000,13300909.000000,566987155.740000);
	SaveDayData(405,20100401.000000,0.0,42.299999,42.490002,42.680000,42.099998,0.0,-0.200000,18376374.000000,775933360.610000);
	SaveDayData(406,20100402.000000,0.0,40.340000,42.490002,42.520000,40.299999,0.0,-1.960000,30926046.000000,1266564992.640000);
	SaveDayData(407,20100406.000000,0.0,41.209999,40.349998,41.580002,39.980000,0.0,0.870000,22966823.000000,937034065.450000);
	SaveDayData(408,20100407.000000,0.0,41.540001,41.150002,41.869999,40.889999,0.0,0.330000,11533960.000000,478710284.060000);
	SaveDayData(409,20100408.000000,0.0,41.099998,41.500000,41.750000,40.349998,0.0,-0.440000,10753695.000000,441478003.430000);
	SaveDayData(410,20100409.000000,0.0,42.299999,41.849998,42.450001,41.799999,0.0,1.200000,16964664.000000,715628799.890000);
	SaveDayData(411,20100412.000000,0.0,44.000000,42.500000,44.060001,42.500000,0.0,1.700000,20119603.000000,873609628.730000);
	SaveDayData(412,20100413.000000,0.0,43.700001,44.029999,44.380001,42.369999,0.0,-0.300000,14420368.000000,623237768.530000);
	SaveDayData(413,20100414.000000,0.0,43.000000,43.549999,43.549999,42.759998,0.0,-0.700000,8616051.000000,370354648.160000);
	SaveDayData(414,20100415.000000,0.0,42.849998,42.980000,43.380001,42.599998,0.0,-0.150000,6277074.000000,269374144.050000);
	SaveDayData(415,20100416.000000,0.0,42.910000,43.000000,43.259998,42.599998,0.0,0.060000,5824467.000000,249912769.540000);
	SaveDayData(416,20100419.000000,0.0,41.700001,42.599998,42.660000,41.500000,0.0,-1.210000,1671433.000000,70004968.880000);
	SaveDayData(417,20100420.000000,0.0,41.049999,41.139999,41.480000,40.410000,0.0,-0.150000,8462463.000000,346033377.790000);
	SaveDayData(418,20100421.000000,0.0,41.380001,41.220001,41.500000,40.820000,0.0,0.330000,12989476.000000,535756399.560000);
	SaveDayData(419,20100422.000000,0.0,40.560001,41.389999,41.439999,40.000000,0.0,-0.820000,14187134.000000,578236550.740000);
	SaveDayData(420,20100423.000000,0.0,39.500000,40.560001,40.980000,39.119999,0.0,-1.060000,12786302.000000,510208967.070000);
	SaveDayData(421,20100426.000000,0.0,40.799999,39.790001,41.599998,39.770000,0.0,1.300000,17319429.000000,711737692.150000);
	SaveDayData(422,20100427.000000,0.0,41.549999,40.500000,41.779999,39.779999,0.0,0.750000,14306170.000000,583442206.620000);
	SaveDayData(423,20100428.000000,0.0,41.660000,40.900002,42.299999,40.400002,0.0,0.110000,10787360.000000,449659460.810000);
	SaveDayData(424,20100429.000000,0.0,40.500000,41.770000,42.349998,39.799999,0.0,-1.160000,10493909.000000,431436088.140000);
	SaveDayData(425,20100430.000000,0.0,37.250000,37.389999,38.500000,36.450001,0.0,-3.250000,32197602.000000,1199309319.740000);
	SaveDayData(426,20100504.000000,0.0,36.849998,36.099998,37.540001,36.099998,0.0,-0.400000,6483883.000000,240459230.370000);
	SaveDayData(427,20100505.000000,0.0,36.060001,37.049999,37.189999,35.549999,0.0,-0.790000,16435085.000000,592485342.710000);
	SaveDayData(428,20100506.000000,0.0,34.180000,36.099998,36.380001,34.119999,0.0,-1.880000,20345026.000000,715937224.610000);
	SaveDayData(429,20100507.000000,0.0,34.250000,33.849998,34.689999,33.000000,0.0,0.070000,12237579.000000,416606399.270000);
	SaveDayData(430,20100510.000000,0.0,34.490002,34.139999,34.849998,33.799999,0.0,0.240000,11473621.000000,393442597.190000);
	SaveDayData(431,20100511.000000,0.0,34.450001,35.200001,36.000000,34.360001,0.0,-0.040000,13621926.000000,479581973.140000);
	SaveDayData(432,20100512.000000,0.0,34.099998,34.389999,34.849998,33.310001,0.0,-0.350000,7463841.000000,254068041.460000);
	SaveDayData(433,20100513.000000,0.0,35.610001,34.110001,35.630001,34.110001,0.0,1.510000,8046194.000000,282480587.850000);
	SaveDayData(434,20100514.000000,0.0,35.290001,35.549999,35.549999,34.799999,0.0,-0.320000,4876077.000000,171488376.430000);
	SaveDayData(435,20100517.000000,0.0,33.500000,34.599998,34.970001,33.299999,0.0,-1.790000,5480441.000000,186283823.130000);
	SaveDayData(436,20100518.000000,0.0,34.099998,33.389999,34.480000,33.220001,0.0,0.600000,6253772.000000,211329360.950000);
	SaveDayData(437,20100519.000000,0.0,34.349998,34.080002,34.759998,33.889999,0.0,0.250000,5977961.000000,205939011.340000);
	SaveDayData(438,20100520.000000,0.0,33.779999,34.290001,35.299999,33.599998,0.0,-0.570000,9608387.000000,332365854.210000);
	SaveDayData(439,20100521.000000,0.0,34.020000,33.250000,34.080002,32.900002,0.0,0.240000,6393546.000000,214561415.500000);
	SaveDayData(440,20100524.000000,0.0,35.119999,34.349998,35.450001,34.299999,0.0,1.100000,7262055.000000,254908367.370000);
	SaveDayData(441,20100525.000000,0.0,34.480000,35.000000,35.099998,34.279999,0.0,-0.640000,4643547.000000,160955098.810000);
	SaveDayData(442,20100526.000000,0.0,35.130001,34.549999,35.349998,34.549999,0.0,0.650000,5150573.000000,180163576.220000);
	SaveDayData(443,20100527.000000,0.0,35.669998,35.000000,35.790001,34.549999,0.0,0.540000,5569697.000000,196520935.050000);
	SaveDayData(444,20100528.000000,0.0,36.130001,36.000000,36.799999,35.740002,0.0,0.460000,6777855.000000,245952183.600000);
	SaveDayData(445,20100531.000000,0.0,35.049999,35.990002,36.250000,35.020000,0.0,-1.080000,3715668.000000,131777247.030000);
	SaveDayData(446,20100601.000000,0.0,33.799999,34.779999,35.299999,33.430000,0.0,-1.250000,5769165.000000,196867643.080000);
	SaveDayData(447,20100602.000000,0.0,35.009998,33.799999,35.040001,32.959999,0.0,1.210000,7059982.000000,238531388.020000);
	SaveDayData(448,20100603.000000,0.0,35.009998,35.009998,35.009998,35.009998,0.0,0.000000,0.000000,0.000000);
	SaveDayData(449,20100604.000000,0.0,34.049999,34.880001,34.880001,33.750000,0.0,-0.960000,6028888.000000,205346543.880000);
	SaveDayData(450,20100607.000000,0.0,31.799999,33.299999,33.500000,31.790001,0.0,-2.250000,16702399.000000,540977388.180000);
	SaveDayData(451,20100608.000000,0.0,31.719999,32.080002,32.660000,31.650000,0.0,-0.080000,10053140.000000,321905529.180000);
	SaveDayData(452,20100609.000000,0.0,32.419998,32.020000,32.500000,31.650000,0.0,0.700000,9253454.000000,296572040.200000);
	SaveDayData(453,20100610.000000,0.0,32.099998,32.320000,32.480000,31.850000,0.0,-0.320000,10131368.000000,325929831.070000);
	SaveDayData(454,20100611.000000,0.0,32.090000,32.299999,32.540001,32.049999,0.0,-0.010000,7491624.000000,241745178.070000);
	SaveDayData(455,20100617.000000,0.0,32.740002,32.299999,33.209999,32.299999,0.0,0.650000,10359090.000000,340924953.290000);
	SaveDayData(456,20100618.000000,0.0,32.209999,32.849998,33.360001,31.900000,0.0,-0.530000,8053040.000000,263850156.710000);
	SaveDayData(457,20100621.000000,0.0,33.040001,32.250000,33.200001,31.700001,0.0,0.830000,8999210.000000,291447616.530000);
	SaveDayData(458,20100622.000000,0.0,32.880001,32.959999,33.270000,32.669998,0.0,-0.160000,5073211.000000,167078415.560000);
	SaveDayData(459,20100623.000000,0.0,32.540001,32.869999,33.160000,31.799999,0.0,-0.340000,10375909.000000,335660746.740000);
	SaveDayData(460,20100624.000000,0.0,21.219999,21.379999,21.540001,20.910000,0.0,-0.270000,9287340.000000,196859868.250000);
	SaveDayData(461,20100625.000000,0.0,21.200001,21.290001,21.500000,21.000000,0.0,-0.020000,7271071.000000,154426495.340000);
	SaveDayData(462,20100628.000000,0.0,20.100000,21.200001,21.340000,20.000000,0.0,-1.100000,15164276.000000,310006686.400000);
	SaveDayData(463,20100629.000000,0.0,18.889999,20.100000,20.290001,18.799999,0.0,-1.210000,17028327.000000,334226194.860000);
	SaveDayData(464,20100630.000000,0.0,19.240000,18.700001,19.350000,18.299999,0.0,0.350000,14658992.000000,277035158.150000);
	SaveDayData(465,20100701.000000,0.0,19.230000,19.129999,19.430000,19.020000,0.0,-0.010000,7780105.000000,149520109.420000);
	SaveDayData(466,20100702.000000,0.0,19.240000,19.100000,19.500000,18.400000,0.0,0.010000,10901980.000000,207531034.880000);
	SaveDayData(467,20100705.000000,0.0,18.480000,19.170000,19.170000,18.330000,0.0,-0.760000,10141052.000000,187836022.270000);
	SaveDayData(468,20100706.000000,0.0,18.860001,18.459999,18.900000,18.389999,0.0,0.380000,13384636.000000,250364748.170000);
	SaveDayData(469,20100707.000000,0.0,19.230000,18.820000,19.280001,18.690001,0.0,0.370000,10214340.000000,193936936.920000);
	SaveDayData(470,20100708.000000,0.0,18.950001,19.059999,19.200001,18.700001,0.0,-0.280000,11301271.000000,214505641.290000);
	SaveDayData(471,20100709.000000,0.0,20.000000,18.850000,20.209999,18.450001,0.0,1.050000,21263647.000000,413998381.810000);
	SaveDayData(472,20100712.000000,0.0,20.200001,20.000000,20.309999,19.709999,0.0,0.200000,12325403.000000,247470386.790000);
	SaveDayData(473,20100713.000000,0.0,20.230000,20.000000,20.360001,19.790001,0.0,0.030000,8161660.000000,164166737.510000);
	SaveDayData(474,20100714.000000,0.0,20.600000,20.219999,20.969999,20.120001,0.0,0.370000,10554258.000000,217495212.600000);
	SaveDayData(475,20100715.000000,0.0,20.280001,20.590000,20.700001,20.260000,0.0,-0.320000,8309565.000000,169883632.480000);
	SaveDayData(476,20100716.000000,0.0,20.320000,20.100000,20.469999,19.459999,0.0,0.040000,8564041.000000,170569116.940000);
	SaveDayData(477,20100719.000000,0.0,20.940001,20.000000,21.000000,19.870001,0.0,0.620000,11443724.000000,236523121.940000);
	SaveDayData(478,20100720.000000,0.0,21.860001,20.959999,22.110001,20.950001,0.0,0.920000,23435307.000000,509988758.060000);
	SaveDayData(479,20100721.000000,0.0,21.760000,21.940001,22.180000,21.500000,0.0,-0.100000,13433888.000000,293562193.500000);
	SaveDayData(480,20100722.000000,0.0,22.320000,21.799999,22.350000,21.680000,0.0,0.560000,11079248.000000,243825490.690000);
	SaveDayData(481,20100723.000000,0.0,22.790001,22.350000,23.100000,22.219999,0.0,0.470000,13902031.000000,315875970.590000);
	SaveDayData(482,20100726.000000,0.0,22.650000,22.719999,22.850000,22.250000,0.0,-0.140000,9655936.000000,217202075.930000);
	SaveDayData(483,20100727.000000,0.0,22.200001,22.650000,22.660000,22.040001,0.0,-0.450000,8766480.000000,195217373.090000);
	SaveDayData(484,20100728.000000,0.0,22.889999,22.270000,22.889999,22.200001,0.0,0.690000,10683260.000000,242254085.980000);
	SaveDayData(485,20100729.000000,0.0,22.610001,22.980000,23.110001,22.469999,0.0,-0.280000,10080424.000000,228469870.730000);
	SaveDayData(486,20100730.000000,0.0,22.750000,22.629999,23.049999,22.270000,0.0,0.140000,8758879.000000,198490561.540000);
	SaveDayData(487,20100802.000000,0.0,23.160000,22.740000,23.320000,22.650000,0.0,0.410000,11113577.000000,255938864.870000);
	SaveDayData(488,20100803.000000,0.0,23.070000,23.309999,23.549999,22.910000,0.0,-0.090000,10767551.000000,250588049.810000);
	SaveDayData(489,20100804.000000,0.0,23.250000,22.850000,23.350000,22.760000,0.0,0.250000,11583660.000000,266197886.420000);
	SaveDayData(490,20100805.000000,0.0,23.120001,23.260000,23.290001,22.750000,0.0,-0.130000,10936259.000000,251786867.220000);
	SaveDayData(491,20100806.000000,0.0,23.740000,23.110001,23.879999,22.660000,0.0,0.620000,14566064.000000,337926668.770000);
	SaveDayData(492,20100809.000000,0.0,23.940001,23.709999,24.100000,23.600000,0.0,0.200000,11726605.000000,279671068.450000);
	SaveDayData(493,20100810.000000,0.0,23.740000,23.990000,24.129999,23.450001,0.0,-0.200000,11997838.000000,285262777.360000);
	SaveDayData(494,20100811.000000,0.0,23.180000,23.629999,23.900000,22.799999,0.0,-0.560000,15986192.000000,371527945.180000);
	SaveDayData(495,20100812.000000,0.0,21.450001,22.950001,23.000000,20.950001,0.0,-1.730000,44258061.000000,965980322.940000);
	SaveDayData(496,20100813.000000,0.0,21.400000,21.240000,21.500000,20.750000,0.0,-0.050000,30309328.000000,637889533.830000);
	SaveDayData(497,20100816.000000,0.0,22.299999,21.559999,22.389999,21.510000,0.0,0.900000,26513442.000000,583767946.350000);
	SaveDayData(498,20100817.000000,0.0,23.000000,22.459999,23.100000,22.280001,0.0,0.700000,19903441.000000,454659883.830000);
	SaveDayData(499,20100818.000000,0.0,22.760000,23.010000,23.049999,22.670000,0.0,-0.240000,12249465.000000,279231079.770000);
	SaveDayData(500,20100819.000000,0.0,22.480000,22.790001,22.980000,22.400000,0.0,-0.280000,3502718.000000,79163189.040000);

	// 下边是一日的数据：
	SaveTickData(1  ,20100818.000000,93100000.000000,23.020000,23.010000,23.040001,23.010000,0.020000,0.090000,71741.000000,1651295.000000);
	SaveTickData(2  ,20100818.000000,93200000.000000,23.000000,23.020000,23.049999,23.000000,0.000000,0.000000,57600.000000,1326320.180000);
	SaveTickData(3  ,20100818.000000,93300000.000000,22.959999,23.000000,23.010000,22.959999,-0.040000,-0.170000,27600.000000,634864.000000);
	SaveTickData(4  ,20100818.000000,93400000.000000,22.950001,23.000000,23.000000,22.950001,-0.050000,-0.220000,67400.000000,1548712.700000);
	SaveTickData(5  ,20100818.000000,93500000.000000,22.959999,22.980000,22.980000,22.950001,-0.040000,-0.170000,42700.000000,980878.000000);
	SaveTickData(6  ,20100818.000000,93600000.000000,22.959999,22.959999,22.990000,22.950001,-0.040000,-0.170000,38113.000000,875171.220000);
	SaveTickData(7  ,20100818.000000,93700000.000000,22.969999,22.959999,22.990000,22.959999,-0.030000,-0.130000,33150.000000,761217.500000);
	SaveTickData(8  ,20100818.000000,93800000.000000,23.000000,22.990000,23.000000,22.990000,0.000000,0.000000,32300.000000,742500.500000);
	SaveTickData(9  ,20100818.000000,93900000.000000,22.959999,22.980000,22.990000,22.959999,-0.040000,-0.170000,44610.000000,1024804.600000);
	SaveTickData(10 ,20100818.000000,94000000.000000,22.950001,22.969999,22.969999,22.950001,-0.050000,-0.220000,94927.000000,2179551.550000);
	SaveTickData(11 ,20100818.000000,94100000.000000,22.850000,22.940001,22.940001,22.850000,-0.150000,-0.650000,48500.000000,1110637.000000);
	SaveTickData(12 ,20100818.000000,94200000.000000,22.780001,22.820000,22.820000,22.780001,-0.220000,-0.960000,55400.000000,1263852.000000);
	SaveTickData(13 ,20100818.000000,94300000.000000,22.770000,22.780001,22.780001,22.760000,-0.230000,-1.000000,190100.000000,4328903.000000);
	SaveTickData(14 ,20100818.000000,94400000.000000,22.799999,22.770000,22.799999,22.770000,-0.200000,-0.870000,91513.000000,2084143.010000);
	SaveTickData(15 ,20100818.000000,94500000.000000,22.820000,22.820000,22.900000,22.820000,-0.180000,-0.780000,54850.000000,1252649.000000);
	SaveTickData(16 ,20100818.000000,94600000.000000,22.840000,22.900000,22.900000,22.830000,-0.160000,-0.700000,25100.000000,574427.000000);
	SaveTickData(17 ,20100818.000000,94700000.000000,22.860001,22.889999,22.900000,22.820000,-0.140000,-0.610000,55200.000000,1262188.000000);
	SaveTickData(18 ,20100818.000000,94800000.000000,22.879999,22.870001,22.879999,22.809999,-0.120000,-0.520000,133000.000000,3034102.000000);
	SaveTickData(19 ,20100818.000000,94900000.000000,22.799999,22.879999,22.879999,22.760000,-0.200000,-0.870000,355600.000000,8099441.740000);
	SaveTickData(20 ,20100818.000000,95000000.000000,22.830000,22.770000,22.850000,22.730000,-0.170000,-0.740000,137429.000000,3130431.650000);
	SaveTickData(21 ,20100818.000000,95100000.000000,22.799999,22.790001,22.830000,22.790001,-0.200000,-0.870000,47900.000000,1091985.000000);
	SaveTickData(22 ,20100818.000000,95200000.000000,22.760000,22.790001,22.790001,22.760000,-0.240000,-1.040000,42700.000000,972393.000000);
	SaveTickData(23 ,20100818.000000,95300000.000000,22.780001,22.780001,22.790001,22.750000,-0.220000,-0.960000,47304.000000,1076577.500000);
	SaveTickData(24 ,20100818.000000,95400000.000000,22.770000,22.780001,22.780001,22.760000,-0.230000,-1.000000,26650.000000,606833.000000);
	SaveTickData(25 ,20100818.000000,95500000.000000,22.750000,22.770000,22.780001,22.750000,-0.250000,-1.090000,93600.000000,2130132.000000);
	SaveTickData(26 ,20100818.000000,95600000.000000,22.730000,22.760000,22.760000,22.730000,-0.270000,-1.170000,41958.000000,954158.340000);
	SaveTickData(27 ,20100818.000000,95700000.000000,22.700001,22.730000,22.730000,22.700001,-0.300000,-1.300000,155844.000000,3538919.800000);
	SaveTickData(28 ,20100818.000000,95800000.000000,22.709999,22.700001,22.709999,22.700001,-0.290000,-1.260000,122312.000000,2776913.520000);
	SaveTickData(29 ,20100818.000000,95900000.000000,22.790001,22.740000,22.790001,22.719999,-0.210000,-0.910000,122415.000000,2786451.650000);
	SaveTickData(30 ,20100818.000000,100000000.000000,22.760000,22.790001,22.790001,22.760000,-0.240000,-1.040000,51460.000000,1172049.400000);
	SaveTickData(31 ,20100818.000000,100100000.000000,22.780001,22.760000,22.780001,22.760000,-0.220000,-0.960000,62433.000000,1421880.740000);
	SaveTickData(32 ,20100818.000000,100200000.000000,22.799999,22.780001,22.809999,22.780001,-0.200000,-0.870000,60300.000000,1374331.340000);
	SaveTickData(33 ,20100818.000000,100300000.000000,22.860001,22.830000,22.860001,22.830000,-0.140000,-0.610000,37200.000000,849831.000000);
	SaveTickData(34 ,20100818.000000,100400000.000000,22.860001,22.860001,22.870001,22.860001,-0.140000,-0.610000,41750.000000,954719.000000);
	SaveTickData(35 ,20100818.000000,100500000.000000,22.850000,22.870001,22.870001,22.850000,-0.150000,-0.650000,154650.000000,3536041.000000);
	SaveTickData(36 ,20100818.000000,100600000.000000,22.820000,22.850000,22.850000,22.820000,-0.180000,-0.780000,48850.000000,1115582.000000);
	SaveTickData(37 ,20100818.000000,100700000.000000,22.799999,22.820000,22.830000,22.799999,-0.200000,-0.870000,25950.000000,591941.000000);
	SaveTickData(38 ,20100818.000000,100800000.000000,22.820000,22.809999,22.820000,22.799999,-0.180000,-0.780000,24650.000000,562245.580000);
	SaveTickData(39 ,20100818.000000,100900000.000000,22.799999,22.799999,22.809999,22.799999,-0.200000,-0.870000,22300.000000,508548.000000);
	SaveTickData(40 ,20100818.000000,101000000.000000,22.850000,22.809999,22.850000,22.809999,-0.150000,-0.650000,24555.000000,560567.100000);
	SaveTickData(41 ,20100818.000000,101100000.000000,22.830000,22.860001,22.860001,22.830000,-0.170000,-0.740000,47845.000000,1093168.250000);
	SaveTickData(42 ,20100818.000000,101200000.000000,22.760000,22.760000,22.799999,22.760000,-0.240000,-1.040000,239366.000000,5456981.340000);
	SaveTickData(43 ,20100818.000000,101300000.000000,22.740000,22.760000,22.799999,22.740000,-0.260000,-1.130000,116251.000000,2644682.250000);
	SaveTickData(44 ,20100818.000000,101400000.000000,22.719999,22.750000,22.750000,22.709999,-0.280000,-1.220000,40000.000000,909096.510000);
	SaveTickData(45 ,20100818.000000,101500000.000000,22.719999,22.709999,22.740000,22.709999,-0.280000,-1.220000,37349.000000,848564.190000);
	SaveTickData(46 ,20100818.000000,101600000.000000,22.730000,22.719999,22.730000,22.709999,-0.270000,-1.170000,46350.000000,1053059.500000);
	SaveTickData(47 ,20100818.000000,101700000.000000,22.750000,22.740000,22.750000,22.730000,-0.250000,-1.090000,22300.000000,507110.000000);
	SaveTickData(48 ,20100818.000000,101800000.000000,22.760000,22.750000,22.770000,22.750000,-0.240000,-1.040000,12150.000000,276473.500000);
	SaveTickData(49 ,20100818.000000,101900000.000000,22.750000,22.770000,22.770000,22.750000,-0.250000,-1.090000,68800.000000,1565387.000000);
	SaveTickData(50 ,20100818.000000,102000000.000000,22.750000,22.750000,22.760000,22.740000,-0.250000,-1.090000,21750.000000,494886.000000);
	SaveTickData(51 ,20100818.000000,102100000.000000,22.740000,22.750000,22.750000,22.730000,-0.260000,-1.130000,32500.000000,739233.000000);
	SaveTickData(52 ,20100818.000000,102200000.000000,22.740000,22.750000,22.760000,22.730000,-0.260000,-1.130000,31700.000000,720929.000000);
	SaveTickData(53 ,20100818.000000,102300000.000000,22.750000,22.750000,22.750000,22.740000,-0.250000,-1.090000,19000.000000,432168.000000);
	SaveTickData(54 ,20100818.000000,102400000.000000,22.740000,22.740000,22.750000,22.740000,-0.260000,-1.130000,20919.000000,475772.060000);
	SaveTickData(55 ,20100818.000000,102500000.000000,22.750000,22.750000,22.760000,22.740000,-0.250000,-1.090000,16710.000000,380120.500000);
	SaveTickData(56 ,20100818.000000,102600000.000000,22.750000,22.760000,22.760000,22.750000,-0.250000,-1.090000,28690.000000,652793.500000);
	SaveTickData(57 ,20100818.000000,102700000.000000,22.750000,22.750000,22.760000,22.730000,-0.250000,-1.090000,41981.000000,954749.090000);
	SaveTickData(58 ,20100818.000000,102800000.000000,22.740000,22.750000,22.750000,22.730000,-0.260000,-1.130000,23150.000000,526412.000000);
	SaveTickData(59 ,20100818.000000,102900000.000000,22.719999,22.740000,22.740000,22.709999,-0.280000,-1.220000,86155.000000,1957685.550000);
	SaveTickData(60 ,20100818.000000,103000000.000000,22.719999,22.709999,22.719999,22.709999,-0.280000,-1.220000,29300.000000,665460.000000);
	SaveTickData(61 ,20100818.000000,103100000.000000,22.730000,22.709999,22.730000,22.709999,-0.270000,-1.170000,46420.000000,1054736.400000);
	SaveTickData(62 ,20100818.000000,103200000.000000,22.770000,22.730000,22.770000,22.730000,-0.230000,-1.000000,31085.000000,707168.750000);
	SaveTickData(63 ,20100818.000000,103300000.000000,22.799999,22.770000,22.799999,22.760000,-0.200000,-0.870000,56952.000000,1298022.580000);
	SaveTickData(64 ,20100818.000000,103400000.000000,22.820000,22.799999,22.820000,22.799999,-0.180000,-0.780000,7700.000000,175612.000000);
	SaveTickData(65 ,20100818.000000,103500000.000000,22.809999,22.809999,22.809999,22.799999,-0.190000,-0.830000,23700.000000,540464.000000);
	SaveTickData(66 ,20100818.000000,103600000.000000,22.799999,22.809999,22.820000,22.799999,-0.200000,-0.870000,88548.000000,2019843.880000);
	SaveTickData(67 ,20100818.000000,103700000.000000,22.750000,22.799999,22.799999,22.750000,-0.250000,-1.090000,237015.000000,5396298.850000);
	SaveTickData(68 ,20100818.000000,103800000.000000,22.750000,22.750000,22.770000,22.730000,-0.250000,-1.090000,87435.000000,1990879.950000);
	SaveTickData(69 ,20100818.000000,103900000.000000,22.750000,22.740000,22.750000,22.730000,-0.250000,-1.090000,118580.000000,2697476.000000);
	SaveTickData(70 ,20100818.000000,104000000.000000,22.770000,22.740000,22.790001,22.740000,-0.230000,-1.000000,19845.000000,451666.650000);
	SaveTickData(71 ,20100818.000000,104100000.000000,22.750000,22.760000,22.760000,22.730000,-0.250000,-1.090000,42250.000000,961261.000000);
	SaveTickData(72 ,20100818.000000,104200000.000000,22.740000,22.750000,22.750000,22.740000,-0.260000,-1.130000,70500.000000,1603698.500000);
	SaveTickData(73 ,20100818.000000,104300000.000000,22.730000,22.740000,22.750000,22.730000,-0.270000,-1.170000,65550.000000,1490334.500000);
	SaveTickData(74 ,20100818.000000,104400000.000000,22.730000,22.719999,22.740000,22.709999,-0.270000,-1.170000,533849.000000,12127431.190000);
	SaveTickData(75 ,20100818.000000,104500000.000000,22.740000,22.709999,22.740000,22.709999,-0.260000,-1.130000,110718.000000,2515516.780000);
	SaveTickData(76 ,20100818.000000,104600000.000000,22.780001,22.730000,22.780001,22.730000,-0.220000,-0.960000,50283.000000,1144606.250000);
	SaveTickData(77 ,20100818.000000,104700000.000000,22.770000,22.790001,22.799999,22.760000,-0.230000,-1.000000,69300.000000,1579809.500000);
	SaveTickData(78 ,20100818.000000,104800000.000000,22.780001,22.770000,22.780001,22.760000,-0.220000,-0.960000,5100.000000,116107.000000);
	SaveTickData(79 ,20100818.000000,104900000.000000,22.799999,22.770000,22.799999,22.760000,-0.200000,-0.870000,84750.000000,1930260.500000);
	SaveTickData(80 ,20100818.000000,105000000.000000,22.760000,22.780001,22.780001,22.760000,-0.240000,-1.040000,15017.000000,342014.090000);
	SaveTickData(81 ,20100818.000000,105100000.000000,22.740000,22.770000,22.770000,22.740000,-0.260000,-1.130000,22150.000000,503874.500000);
	SaveTickData(82 ,20100818.000000,105200000.000000,22.750000,22.750000,22.750000,22.740000,-0.250000,-1.090000,28500.000000,648101.000000);
	SaveTickData(83 ,20100818.000000,105300000.000000,22.750000,22.740000,22.770000,22.740000,-0.250000,-1.090000,33371.000000,759226.250000);
	SaveTickData(84 ,20100818.000000,105400000.000000,22.750000,22.740000,22.760000,22.740000,-0.250000,-1.090000,23250.000000,528923.290000);
	SaveTickData(85 ,20100818.000000,105500000.000000,22.770000,22.760000,22.770000,22.730000,-0.230000,-1.000000,108750.000000,2473940.750000);
	SaveTickData(86 ,20100818.000000,105600000.000000,22.740000,22.780001,22.780001,22.740000,-0.260000,-1.130000,67300.000000,1532103.000000);
	SaveTickData(87 ,20100818.000000,105700000.000000,22.780001,22.740000,22.780001,22.740000,-0.220000,-0.960000,118100.000000,2688538.500000);
	SaveTickData(88 ,20100818.000000,105800000.000000,22.740000,22.740000,22.770000,22.730000,-0.260000,-1.130000,48800.000000,1109695.000000);
	SaveTickData(89 ,20100818.000000,105900000.000000,22.770000,22.740000,22.770000,22.740000,-0.230000,-1.000000,94500.000000,2149932.000000);
	SaveTickData(90 ,20100818.000000,110000000.000000,22.740000,22.740000,22.750000,22.740000,-0.260000,-1.130000,16824.000000,382669.760000);
	SaveTickData(91 ,20100818.000000,110100000.000000,22.750000,22.750000,22.770000,22.740000,-0.250000,-1.090000,98450.000000,2241312.000000);
	SaveTickData(92 ,20100818.000000,110200000.000000,22.750000,22.750000,22.750000,22.740000,-0.250000,-1.090000,13045.000000,296678.300000);
	SaveTickData(93 ,20100818.000000,110300000.000000,22.730000,22.740000,22.770000,22.730000,-0.270000,-1.170000,9155.000000,208205.960000);
	SaveTickData(94 ,20100818.000000,110400000.000000,22.730000,22.730000,22.760000,22.730000,-0.270000,-1.170000,19000.000000,431907.000000);
	SaveTickData(95 ,20100818.000000,110500000.000000,22.740000,22.740000,22.740000,22.730000,-0.260000,-1.130000,7350.000000,167109.500000);
	SaveTickData(96 ,20100818.000000,110600000.000000,22.780001,22.730000,22.780001,22.730000,-0.220000,-0.960000,60619.000000,1379856.130000);
	SaveTickData(97 ,20100818.000000,110700000.000000,22.740000,22.770000,22.780001,22.740000,-0.260000,-1.130000,75100.000000,1708123.430000);
	SaveTickData(98 ,20100818.000000,110800000.000000,22.719999,22.740000,22.740000,22.719999,-0.280000,-1.220000,18399.000000,418281.660000);
	SaveTickData(99 ,20100818.000000,110900000.000000,22.750000,22.740000,22.750000,22.740000,-0.250000,-1.090000,38040.000000,865148.600000);
	SaveTickData(100,20100818.000000,111000000.000000,22.760000,22.740000,22.760000,22.740000,-0.240000,-1.040000,28450.000000,647166.000000);
	SaveTickData(101,20100818.000000,111100000.000000,22.750000,22.750000,22.750000,22.740000,-0.250000,-1.090000,11650.000000,265008.000000);
	SaveTickData(102,20100818.000000,111200000.000000,22.730000,22.740000,22.750000,22.730000,-0.270000,-1.170000,40810.000000,927958.000000);
	SaveTickData(103,20100818.000000,111300000.000000,22.740000,22.730000,22.740000,22.719999,-0.260000,-1.130000,86374.000000,1963717.280000);
	SaveTickData(104,20100818.000000,111400000.000000,22.740000,22.719999,22.740000,22.719999,-0.260000,-1.130000,80650.000000,1833191.500000);
	SaveTickData(105,20100818.000000,111500000.000000,22.719999,22.730000,22.730000,22.719999,-0.280000,-1.220000,15600.000000,354529.000000);
	SaveTickData(106,20100818.000000,111600000.000000,22.719999,22.719999,22.719999,22.700001,-0.280000,-1.220000,269840.000000,6127982.800000);
	SaveTickData(107,20100818.000000,111700000.000000,22.690001,22.719999,22.719999,22.680000,-0.310000,-1.350000,122700.000000,2789088.770000);
	SaveTickData(108,20100818.000000,111800000.000000,22.670000,22.680000,22.680000,22.670000,-0.330000,-1.430000,152100.000000,3449904.000000);
	SaveTickData(109,20100818.000000,111900000.000000,22.670000,22.670000,22.680000,22.670000,-0.330000,-1.430000,32450.000000,735689.500000);
	SaveTickData(110,20100818.000000,112000000.000000,22.670000,22.670000,22.680000,22.670000,-0.330000,-1.430000,30300.000000,687065.000000);
	SaveTickData(111,20100818.000000,112100000.000000,22.680000,22.680000,22.680000,22.670000,-0.320000,-1.390000,108300.000000,2457008.520000);
	SaveTickData(112,20100818.000000,112200000.000000,22.690001,22.680000,22.719999,22.680000,-0.310000,-1.350000,19507.000000,442615.760000);
	SaveTickData(113,20100818.000000,112300000.000000,22.760000,22.730000,22.760000,22.730000,-0.240000,-1.040000,85053.000000,1933641.750000);
	SaveTickData(114,20100818.000000,112400000.000000,22.780001,22.760000,22.780001,22.760000,-0.220000,-0.960000,21450.000000,488467.500000);
	SaveTickData(115,20100818.000000,112500000.000000,22.799999,22.770000,22.809999,22.770000,-0.200000,-0.870000,69800.000000,1591059.000000);
	SaveTickData(116,20100818.000000,112600000.000000,22.850000,22.799999,22.860001,22.799999,-0.150000,-0.650000,65400.000000,1494048.000000);
	SaveTickData(117,20100818.000000,112700000.000000,22.809999,22.850000,22.850000,22.809999,-0.190000,-0.830000,13550.000000,309421.500000);
	SaveTickData(118,20100818.000000,112800000.000000,22.840000,22.850000,22.850000,22.820000,-0.160000,-0.700000,4200.000000,95914.000000);
	SaveTickData(119,20100818.000000,112900000.000000,22.820000,22.840000,22.840000,22.820000,-0.180000,-0.780000,25150.000000,574011.000000);
	SaveTickData(120,20100818.000000,113000000.000000,22.809999,22.820000,22.820000,22.809999,-0.190000,-0.830000,8755.000000,199759.550000);
	SaveTickData(121,20100818.000000,130100000.000000,22.820000,22.809999,22.820000,22.799999,-0.180000,-0.780000,86602.000000,1974983.640000);
	SaveTickData(122,20100818.000000,130200000.000000,22.830000,22.820000,22.830000,22.780001,-0.170000,-0.740000,16200.000000,369420.270000);
	SaveTickData(123,20100818.000000,130300000.000000,22.780001,22.780001,22.799999,22.770000,-0.220000,-0.960000,15200.000000,346451.000000);
	SaveTickData(124,20100818.000000,130400000.000000,22.820000,22.780001,22.820000,22.770000,-0.180000,-0.780000,30000.000000,683614.000000);
	SaveTickData(125,20100818.000000,130500000.000000,22.820000,22.799999,22.820000,22.799999,-0.180000,-0.780000,40850.000000,931406.000000);
	SaveTickData(126,20100818.000000,130600000.000000,22.780001,22.780001,22.809999,22.780001,-0.220000,-0.960000,37700.000000,859495.000000);
	SaveTickData(127,20100818.000000,130700000.000000,22.780001,22.770000,22.780001,22.770000,-0.220000,-0.960000,14000.000000,318898.000000);
	SaveTickData(128,20100818.000000,130800000.000000,22.780001,22.770000,22.780001,22.770000,-0.220000,-0.960000,18800.000000,428206.000000);
	SaveTickData(129,20100818.000000,130900000.000000,22.820000,22.770000,22.820000,22.770000,-0.180000,-0.780000,94550.000000,2154150.000000);
	SaveTickData(130,20100818.000000,131000000.000000,22.830000,22.820000,22.830000,22.820000,-0.170000,-0.740000,9405.000000,214703.100000);
	SaveTickData(131,20100818.000000,131100000.000000,22.820000,22.820000,22.830000,22.780001,-0.180000,-0.780000,29495.000000,673244.900000);
	SaveTickData(132,20100818.000000,131200000.000000,22.790001,22.820000,22.820000,22.790001,-0.210000,-0.910000,10900.000000,248506.000000);
	SaveTickData(133,20100818.000000,131300000.000000,22.799999,22.790001,22.799999,22.780001,-0.200000,-0.870000,19999.000000,455812.220000);
	SaveTickData(134,20100818.000000,131400000.000000,22.820000,22.799999,22.820000,22.799999,-0.180000,-0.780000,6600.000000,150558.000000);
	SaveTickData(135,20100818.000000,131500000.000000,22.820000,22.820000,22.820000,22.809999,-0.180000,-0.780000,5900.000000,134622.000000);
	SaveTickData(136,20100818.000000,131600000.000000,22.820000,22.809999,22.820000,22.799999,-0.180000,-0.780000,17314.000000,394922.340000);
	SaveTickData(137,20100818.000000,131700000.000000,22.799999,22.809999,22.809999,22.799999,-0.200000,-0.870000,13386.000000,305300.660000);
	SaveTickData(138,20100818.000000,131800000.000000,22.790001,22.809999,22.809999,22.790001,-0.210000,-0.910000,14100.000000,321477.000000);
	SaveTickData(139,20100818.000000,131900000.000000,22.780001,22.790001,22.799999,22.780001,-0.220000,-0.960000,22200.000000,505844.000000);
	SaveTickData(140,20100818.000000,132000000.000000,22.780001,22.780001,22.780001,22.770000,-0.220000,-0.960000,24400.000000,555799.010000);
	SaveTickData(141,20100818.000000,132100000.000000,22.799999,22.799999,22.799999,22.770000,-0.200000,-0.870000,26600.000000,606148.000000);
	SaveTickData(142,20100818.000000,132200000.000000,22.780001,22.770000,22.780001,22.770000,-0.220000,-0.960000,6100.000000,138906.000000);
	SaveTickData(143,20100818.000000,132300000.000000,22.790001,22.780001,22.799999,22.770000,-0.210000,-0.910000,8900.000000,202751.000000);
	SaveTickData(144,20100818.000000,132400000.000000,22.780001,22.790001,22.790001,22.760000,-0.220000,-0.960000,10300.000000,234589.000000);
	SaveTickData(145,20100818.000000,132500000.000000,22.820000,22.780001,22.820000,22.780001,-0.180000,-0.780000,68364.000000,1559010.840000);
	SaveTickData(146,20100818.000000,132600000.000000,22.820000,22.820000,22.820000,22.809999,-0.180000,-0.780000,30255.000000,690414.100000);
	SaveTickData(147,20100818.000000,132700000.000000,22.820000,22.830000,22.830000,22.820000,-0.180000,-0.780000,10400.000000,237356.000000);
	SaveTickData(148,20100818.000000,132800000.000000,22.860001,22.850000,22.860001,22.850000,-0.140000,-0.610000,98229.000000,2244507.930000);
	SaveTickData(149,20100818.000000,132900000.000000,22.889999,22.860001,22.889999,22.860001,-0.110000,-0.480000,20600.000000,471287.000000);
	SaveTickData(150,20100818.000000,133000000.000000,22.900000,22.900000,22.900000,22.889999,-0.100000,-0.430000,130900.000000,2997794.000000);
	SaveTickData(151,20100818.000000,133100000.000000,22.959999,22.930000,22.959999,22.930000,-0.040000,-0.170000,18350.000000,420988.500000);
	SaveTickData(152,20100818.000000,133200000.000000,22.950001,22.959999,22.980000,22.950001,-0.050000,-0.220000,56450.000000,1296468.500000);
	SaveTickData(153,20100818.000000,133300000.000000,22.860001,22.950001,22.950001,22.860001,-0.140000,-0.610000,45800.000000,1049569.500000);
	SaveTickData(154,20100818.000000,133400000.000000,22.850000,22.860001,22.930000,22.820000,-0.150000,-0.650000,36800.000000,840735.880000);
	SaveTickData(155,20100818.000000,133500000.000000,22.850000,22.830000,22.870001,22.830000,-0.150000,-0.650000,30000.000000,685671.000000);
	SaveTickData(156,20100818.000000,133600000.000000,22.840000,22.850000,22.850000,22.840000,-0.160000,-0.700000,37553.000000,857620.520000);
	SaveTickData(157,20100818.000000,133700000.000000,22.850000,22.840000,22.850000,22.840000,-0.150000,-0.650000,15310.000000,349811.500000);
	SaveTickData(158,20100818.000000,133800000.000000,22.850000,22.840000,22.850000,22.840000,-0.150000,-0.650000,28500.000000,650985.900000);
	SaveTickData(159,20100818.000000,133900000.000000,22.840000,22.840000,22.840000,22.840000,-0.160000,-0.700000,53027.000000,1211190.680000);
	SaveTickData(160,20100818.000000,134000000.000000,22.840000,22.840000,22.850000,22.840000,-0.160000,-0.700000,12049.000000,275240.160000);
	SaveTickData(161,20100818.000000,134100000.000000,22.830000,22.840000,22.840000,22.830000,-0.170000,-0.740000,9861.000000,225220.240000);
	SaveTickData(162,20100818.000000,134200000.000000,22.850000,22.840000,22.850000,22.840000,-0.150000,-0.650000,14939.000000,341290.760000);
	SaveTickData(163,20100818.000000,134300000.000000,22.860001,22.850000,22.860001,22.850000,-0.140000,-0.610000,14488.000000,331167.300000);
	SaveTickData(164,20100818.000000,134400000.000000,22.850000,22.850000,22.850000,22.840000,-0.150000,-0.650000,8873.000000,202701.560000);
	SaveTickData(165,20100818.000000,134500000.000000,22.820000,22.840000,22.840000,22.820000,-0.180000,-0.780000,17959.000000,409933.380000);
	SaveTickData(166,20100818.000000,134600000.000000,22.820000,22.820000,22.820000,22.799999,-0.180000,-0.780000,49858.000000,1137401.920000);
	SaveTickData(167,20100818.000000,134700000.000000,22.809999,22.809999,22.809999,22.799999,-0.190000,-0.830000,5400.000000,123136.000000);
	SaveTickData(168,20100818.000000,134800000.000000,22.799999,22.799999,22.799999,22.780001,-0.200000,-0.870000,12246.000000,279162.600000);
	SaveTickData(169,20100818.000000,134900000.000000,22.790001,22.790001,22.799999,22.790001,-0.210000,-0.910000,34842.000000,793762.240000);
	SaveTickData(170,20100818.000000,135000000.000000,22.770000,22.780001,22.820000,22.770000,-0.230000,-1.000000,44064.000000,1004409.360000);
	SaveTickData(171,20100818.000000,135100000.000000,22.850000,22.830000,22.850000,22.830000,-0.150000,-0.650000,4000.000000,91376.000000);
	SaveTickData(172,20100818.000000,135200000.000000,22.830000,22.850000,22.850000,22.830000,-0.170000,-0.740000,15600.000000,356310.000000);
	SaveTickData(173,20100818.000000,135300000.000000,22.830000,22.830000,22.830000,22.830000,-0.170000,-0.740000,4900.000000,111867.000000);
	SaveTickData(174,20100818.000000,135400000.000000,22.809999,22.820000,22.830000,22.809999,-0.190000,-0.830000,19251.000000,439333.310000);
	SaveTickData(175,20100818.000000,135500000.000000,22.820000,22.820000,22.830000,22.820000,-0.180000,-0.780000,14000.000000,319494.000000);
	SaveTickData(176,20100818.000000,135600000.000000,22.840000,22.820000,22.840000,22.820000,-0.160000,-0.700000,9755.000000,222715.650000);
	SaveTickData(177,20100818.000000,135700000.000000,22.840000,22.840000,22.840000,22.830000,-0.160000,-0.700000,5040.000000,115090.200000);
	SaveTickData(178,20100818.000000,135800000.000000,22.840000,22.830000,22.840000,22.830000,-0.160000,-0.700000,14100.000000,322015.000000);
	SaveTickData(179,20100818.000000,135900000.000000,22.840000,22.840000,22.840000,22.830000,-0.160000,-0.700000,9700.000000,221507.000000);
	SaveTickData(180,20100818.000000,140000000.000000,22.840000,22.830000,22.840000,22.830000,-0.160000,-0.700000,22696.000000,518315.640000);
	SaveTickData(181,20100818.000000,140100000.000000,22.850000,22.850000,22.850000,22.840000,-0.150000,-0.650000,17300.000000,395227.000000);
	SaveTickData(182,20100818.000000,140200000.000000,22.799999,22.860001,22.870001,22.799999,-0.200000,-0.870000,86009.000000,1961953.550000);
	SaveTickData(183,20100818.000000,140300000.000000,22.799999,22.799999,22.799999,22.790001,-0.200000,-0.870000,47850.000000,1090962.500000);
	SaveTickData(184,20100818.000000,140400000.000000,22.870001,22.799999,22.870001,22.799999,-0.130000,-0.570000,76601.000000,1746628.420000);
	SaveTickData(185,20100818.000000,140500000.000000,22.870001,22.879999,22.879999,22.870001,-0.130000,-0.570000,17600.000000,402669.080000);
	SaveTickData(186,20100818.000000,140600000.000000,22.889999,22.879999,22.889999,22.879999,-0.110000,-0.480000,20542.000000,470102.960000);
	SaveTickData(187,20100818.000000,140700000.000000,22.879999,22.879999,22.889999,22.879999,-0.120000,-0.520000,48300.000000,1105611.000000);
	SaveTickData(188,20100818.000000,140800000.000000,22.830000,22.879999,22.900000,22.809999,-0.170000,-0.740000,161658.000000,3699711.600000);
	SaveTickData(189,20100818.000000,140900000.000000,22.860001,22.820000,22.860001,22.820000,-0.140000,-0.610000,15176.000000,346447.080000);
	SaveTickData(190,20100818.000000,141000000.000000,22.850000,22.860001,22.889999,22.850000,-0.150000,-0.650000,55900.000000,1278833.500000);
	SaveTickData(191,20100818.000000,141100000.000000,22.860001,22.850000,22.900000,22.850000,-0.140000,-0.610000,234050.000000,5358065.000000);
	SaveTickData(192,20100818.000000,141200000.000000,22.900000,22.889999,22.900000,22.870001,-0.100000,-0.430000,13440.000000,307663.600000);
	SaveTickData(193,20100818.000000,141300000.000000,22.870001,22.900000,22.900000,22.870001,-0.130000,-0.570000,13750.000000,314857.700000);
	SaveTickData(194,20100818.000000,141400000.000000,22.889999,22.889999,22.900000,22.870001,-0.110000,-0.480000,21373.000000,489278.950000);
	SaveTickData(195,20100818.000000,141500000.000000,22.870001,22.889999,22.889999,22.860001,-0.130000,-0.570000,10037.000000,229576.730000);
	SaveTickData(196,20100818.000000,141600000.000000,22.900000,22.900000,22.900000,22.900000,-0.100000,-0.430000,21000.000000,480735.070000);
	SaveTickData(197,20100818.000000,141700000.000000,22.879999,22.900000,22.900000,22.879999,-0.120000,-0.520000,56000.000000,1282264.000000);
	SaveTickData(198,20100818.000000,141800000.000000,22.889999,22.879999,22.889999,22.870001,-0.110000,-0.480000,13260.000000,303405.700000);
	SaveTickData(199,20100818.000000,141900000.000000,22.860001,22.889999,22.889999,22.860001,-0.140000,-0.610000,22150.000000,506482.400000);
	SaveTickData(200,20100818.000000,142000000.000000,22.889999,22.889999,22.889999,22.879999,-0.110000,-0.480000,4100.000000,93809.000000);
	SaveTickData(201,20100818.000000,142100000.000000,22.889999,22.889999,22.889999,22.879999,-0.110000,-0.480000,8500.000000,194540.000000);
	SaveTickData(202,20100818.000000,142200000.000000,22.879999,22.889999,22.889999,22.860001,-0.120000,-0.520000,8400.000000,192151.900000);
	SaveTickData(203,20100818.000000,142300000.000000,22.860001,22.860001,22.900000,22.850000,-0.140000,-0.610000,25552.000000,584352.720000);
	SaveTickData(204,20100818.000000,142400000.000000,22.860001,22.850000,22.860001,22.850000,-0.140000,-0.610000,3400.000000,77698.380000);
	SaveTickData(205,20100818.000000,142500000.000000,22.850000,22.860001,22.879999,22.850000,-0.150000,-0.650000,14900.000000,340644.420000);
	SaveTickData(206,20100818.000000,142600000.000000,22.860001,22.850000,22.860001,22.850000,-0.140000,-0.610000,15500.000000,354191.000000);
	SaveTickData(207,20100818.000000,142700000.000000,22.850000,22.850000,22.900000,22.850000,-0.150000,-0.650000,44038.000000,1007286.120000);
	SaveTickData(208,20100818.000000,142800000.000000,22.850000,22.900000,22.900000,22.850000,-0.150000,-0.650000,46400.000000,1060736.000000);
	SaveTickData(209,20100818.000000,142900000.000000,22.850000,22.850000,22.850000,22.840000,-0.150000,-0.650000,40700.000000,929877.000000);
	SaveTickData(210,20100818.000000,143000000.000000,22.840000,22.840000,22.850000,22.840000,-0.160000,-0.700000,114710.000000,2621062.400000);
	SaveTickData(211,20100818.000000,143100000.000000,22.870001,22.840000,22.870001,22.840000,-0.130000,-0.570000,135500.000000,3096202.000000);
	SaveTickData(212,20100818.000000,143200000.000000,22.879999,22.879999,22.900000,22.879999,-0.120000,-0.520000,106300.000000,2433665.000000);
	SaveTickData(213,20100818.000000,143300000.000000,22.889999,22.889999,22.900000,22.889999,-0.110000,-0.480000,43600.000000,998381.000000);
	SaveTickData(214,20100818.000000,143400000.000000,22.889999,22.889999,22.889999,22.879999,-0.110000,-0.480000,14300.000000,327248.500000);
	SaveTickData(215,20100818.000000,143500000.000000,22.879999,22.879999,22.879999,22.870001,-0.120000,-0.520000,16000.000000,366060.000000);
	SaveTickData(216,20100818.000000,143600000.000000,22.870001,22.870001,22.879999,22.870001,-0.130000,-0.570000,10900.000000,249313.000000);
	SaveTickData(217,20100818.000000,143700000.000000,22.850000,22.870001,22.870001,22.850000,-0.150000,-0.650000,46700.000000,1067396.000000);
	SaveTickData(218,20100818.000000,143800000.000000,22.840000,22.850000,22.850000,22.830000,-0.160000,-0.700000,29800.000000,680633.900000);
	SaveTickData(219,20100818.000000,143900000.000000,22.850000,22.840000,22.860001,22.840000,-0.150000,-0.650000,11300.000000,258235.000000);
	SaveTickData(220,20100818.000000,144000000.000000,22.850000,22.850000,22.870001,22.850000,-0.150000,-0.650000,39700.000000,907117.000000);
	SaveTickData(221,20100818.000000,144100000.000000,22.830000,22.850000,22.850000,22.830000,-0.170000,-0.740000,26214.000000,598609.620000);
	SaveTickData(222,20100818.000000,144200000.000000,22.830000,22.830000,22.840000,22.820000,-0.170000,-0.740000,35700.000000,815240.000000);
	SaveTickData(223,20100818.000000,144300000.000000,22.820000,22.830000,22.830000,22.820000,-0.180000,-0.780000,48000.000000,1095511.000000);
	SaveTickData(224,20100818.000000,144400000.000000,22.820000,22.820000,22.820000,22.809999,-0.180000,-0.780000,25410.000000,579764.100000);
	SaveTickData(225,20100818.000000,144500000.000000,22.809999,22.809999,22.820000,22.809999,-0.190000,-0.830000,31403.000000,716491.430000);
	SaveTickData(226,20100818.000000,144600000.000000,22.790001,22.809999,22.820000,22.790001,-0.210000,-0.910000,130287.000000,2970848.470000);
	SaveTickData(227,20100818.000000,144700000.000000,22.780001,22.790001,22.799999,22.780001,-0.220000,-0.960000,53949.000000,1229569.200000);
	SaveTickData(228,20100818.000000,144800000.000000,22.770000,22.780001,22.790001,22.770000,-0.230000,-1.000000,46200.000000,1052356.000000);
	SaveTickData(229,20100818.000000,144900000.000000,22.770000,22.780001,22.780001,22.770000,-0.230000,-1.000000,34090.000000,776311.300000);
	SaveTickData(230,20100818.000000,145000000.000000,22.770000,22.770000,22.780001,22.760000,-0.230000,-1.000000,33600.000000,765124.940000);
	SaveTickData(231,20100818.000000,145100000.000000,22.750000,22.760000,22.770000,22.750000,-0.250000,-1.090000,49680.000000,1130594.880000);
	SaveTickData(232,20100818.000000,145200000.000000,22.760000,22.750000,22.770000,22.750000,-0.240000,-1.040000,85650.000000,1949293.000000);
	SaveTickData(233,20100818.000000,145300000.000000,22.770000,22.770000,22.780001,22.770000,-0.230000,-1.000000,26956.000000,613838.120000);
	SaveTickData(234,20100818.000000,145400000.000000,22.780001,22.780001,22.780001,22.770000,-0.220000,-0.960000,58602.000000,1334564.540000);
	SaveTickData(235,20100818.000000,145500000.000000,22.770000,22.780001,22.780001,22.760000,-0.230000,-1.000000,60242.000000,1371932.570000);
	SaveTickData(236,20100818.000000,145600000.000000,22.770000,22.770000,22.770000,22.760000,-0.230000,-1.000000,103686.000000,2360308.360000);
	SaveTickData(237,20100818.000000,145700000.000000,22.760000,22.760000,22.770000,22.760000,-0.240000,-1.040000,112141.000000,2552488.390000);
	SaveTickData(238,20100818.000000,145800000.000000,22.760000,22.760000,22.760000,22.760000,-0.240000,-1.040000,4300.000000,97882.000000);
	SaveTickData(239,20100818.000000,145900000.000000,22.760000,22.760000,22.760000,22.760000,-0.240000,-1.040000,0.000000,0.000000);
	SaveTickData(240,20100818.000000,150000000.000000,22.760000,22.760000,22.760000,22.760000,-0.240000,-1.043477,86930.000000,1978526.800000);
 
#pragma endregion


}
CTestChartDlg::~CTestChartDlg()
{
	CLogger::Instance()->Stop();
	CLogger::Instance()->Finish();

	m_Chart.Detach();


	//m_pool.Stop();

	//delete m_pConfig;
 //   m_pConfig = 0;
}
void CTestChartDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
	DDX_Control(pDX, IDC_COMBO_PERIOD, m_cmbQoutePeriod);
	DDX_Control(pDX, IDC_COMBO_SERVER, m_cmbServer);
	DDX_Control(pDX, IDC_LIST_INFO, m_listInfo);
	DDX_Control(pDX, IDC_COMBO_SECURITY, m_cmbSecurity);
	DDX_Control(pDX, IDC_DATETIMEPICKER_TREND, m_HisTrendDate);
	DDX_Control(pDX, IDC_DATETIMEPICKER_START, m_HisDateST);
	DDX_Control(pDX, IDC_DATETIMEPICKER_END, m_HisDateEnd);
	DDX_Check(pDX, IDC_CHECK_AUTO_QUERY, m_nAutoQuery);
}

BEGIN_MESSAGE_MAP(CTestChartDlg, CDialogEx)
	ON_WM_PAINT()
	ON_WM_QUERYDRAGICON()
	ON_MESSAGE(WM_MYTASK, OnUITask)
	ON_BN_CLICKED(IDOK, &CTestChartDlg::OnBnClickedOk)  
	ON_BN_CLICKED(IDC_BUTTON_APPENDDATA, &CTestChartDlg::OnBnClickedButtonAppenddata)
	ON_BN_CLICKED(IDC_BUTTON_ADDCHARTDATA, &CTestChartDlg::OnBnClickedButtonAddchartdata)
	ON_BN_CLICKED(IDC_BUTTON_ADDREALTIMEDATA, &CTestChartDlg::OnBnClickedButtonAddrealtimedata)
	ON_BN_CLICKED(IDC_BUTTON_SETVIEWTYPE, &CTestChartDlg::OnBnClickedButtonSetviewtype)
	ON_BN_CLICKED(IDC_BUTTON_CLEARDATA, &CTestChartDlg::OnBnClickedButtonCleardata)
	ON_WM_TIMER() 
	ON_WM_LBUTTONDOWN()
	ON_WM_MOUSEMOVE()
	ON_WM_SIZE()
	ON_BN_CLICKED(IDC_BUTTON_CLEARINF, &CTestChartDlg::OnBnClickedButtonClearinf)
	ON_WM_SIZE()
	ON_MESSAGE(WM_MSG_MOUSEAXIS,OnMouseAxis )
	ON_BN_CLICKED(IDC_BUTTON_45, &CTestChartDlg::OnBnClickedButton45)
	ON_BN_CLICKED(IDC_BUTTON1, &CTestChartDlg::OnBnClickedButton1)
	ON_BN_CLICKED(IDC_BUTTON_GETAGTD_TREND, &CTestChartDlg::OnBnClickedButtonGetagtdTrend)
	ON_BN_CLICKED(IDC_BUTTON_GETAGTD_HIS, &CTestChartDlg::OnBnClickedButtonGetagtdHis)
	ON_BN_CLICKED(IDC_BUTTON_PXX, &CTestChartDlg::OnBnClickedButtonPxx)
	ON_BN_CLICKED(IDC_BUTTON_DJX, &CTestChartDlg::OnBnClickedButtonDjx)
	ON_BN_CLICKED(IDC_BUTTON_AUTO_DRAW, &CTestChartDlg::OnBnClickedButtonAutoDraw)
	ON_BN_CLICKED(IDC_BUTTON_CONTINUE_LINE, &CTestChartDlg::OnBnClickedButtonContinueLine)
END_MESSAGE_MAP()

void CTestChartDlg::SaveDayData(	int nIndex,
									double dDate,
									double dTime,
									double dClosePrice,
									double dOpenPrice,
									double dHighPrice,
									double dLowPrice,
									double dChangePrice,
									double dChangeRate,
									double dContractVolume,
									double dContractAmout	)	
{ 
		m_stDayPrice1[nIndex-1].dDate = dDate;
		m_stDayPrice1[nIndex-1].dTime = dTime;
		m_stDayPrice1[nIndex-1].dClosePrice = dClosePrice;
		m_stDayPrice1[nIndex-1].dOpenPrice = dOpenPrice;
		m_stDayPrice1[nIndex-1].dHighPrice = dHighPrice;
		m_stDayPrice1[nIndex-1].dLowPrice = dLowPrice;
		m_stDayPrice1[nIndex-1].dChangePrice = dChangePrice;
		m_stDayPrice1[nIndex-1].dChangeRate = dChangeRate;
		m_stDayPrice1[nIndex-1].dContractVolume = dContractVolume;
		m_stDayPrice1[nIndex-1].dContractAmout = dContractAmout;	 
}

void CTestChartDlg::SaveTickData(	int nIndex,
									double dDate,
									double dTime,
									double dClosePrice,
									double dOpenPrice,
									double dHighPrice,
									double dLowPrice,
									double dChangePrice,
									double dChangeRate,
									double dContractVolume,
									double dContractAmout	)	
{ 
		m_stTickPrice1[nIndex-1].dTime = dTime;
		m_stTickPrice1[nIndex-1].dClosePrice = dClosePrice;
		m_stTickPrice1[nIndex-1].dContractVolume = dContractVolume; 
}


BOOL CTestChartDlg::OnInitDialog()
{
	CDialogEx::OnInitDialog();

	// 设置此对话框的图标。当应用程序主窗口不是对话框时，框架将自动
	//  执行此操作
	SetIcon(m_hIcon, TRUE);			// 设置大图标
	SetIcon(m_hIcon, FALSE);		// 设置小图标

	// TODO: 在此添加额外的初始化代码
	RECT rc;

	rc.left = 0;
	rc.top = 0;
	rc.right  = 800;
	rc.bottom = 700;

	//创建K线显示模块
	m_Chart.Create(_T("1112"),WS_CHILD | WS_VISIBLE ,rc,this,IDC_SIMPLECHARTCTRL);
	m_Chart.Init((long)this->m_hWnd, (short)800, (short)700, 0);
	m_Chart.ShowWindow(SW_SHOW);
	

	//创建网络通信
	AfxSocketInit();

	m_ClientSocket.setTestChartDlg(this);
	

	GetDlgItem(IDC_EDIT_TIMERVAL)->SetWindowText(_T("5"));

	//m_pConfig = new CConfigImpl();
	boost::shared_ptr<CConfigImpl>m_pConfig(new CConfigImpl());

	std::string sCfgFilename;
	sCfgFilename = DEFUALT_CONF_PATH PATH_SLASH;
	sCfgFilename += "TestChart.cfg";

	/*char buf[80];   
     _getcwd(buf,sizeof(buf));   
	 string path = buf;
	 path +="\\";
	 path +=sCfgFilename;*/
	if (m_pConfig.get()->Load(sCfgFilename) != 0)
	{
		//cout << "加载配置文件[" << sCfgFilename << "]失败!" << endl;
		ShowTips( _T("加载配置文件失败")); 
		msleep(3);
		return FALSE;
	}


	//加入日志	
	if (CLogger::Instance()->Initial(m_pConfig.get()->GetProperties("logger")) != 0)
	{
		//cout << "Init Log [" << "TestChart.cfg" << "] failure!" << endl;
		ShowTips( _T("初始化日志失败"));
		msleep(3);
		return FALSE;
	}

	//cout << "启动日志..." << endl;

	// 启动日志
	if (CLogger::Instance()->Start() != 0)
	{
		//cout << "Log start failure!" << endl;
		ShowTips( _T("日志启动失败"));
		msleep(3);
		//return FALSE;
	}
	ShowTips(_T("日志启动成功"));

	m_cmbQoutePeriod.SetCurSel(0);
	m_cmbServer.SetCurSel(0);
	m_cmbSecurity.SetCurSel(0);

	//VARIANT vData;
 //   VariantInit (&vData);
 //   vData.vt = VT_R4 | VT_ARRAY;
 //   vData.parray=SafeArrayCreateVector(VT_R4, 0, 500 );    
	//
	//LPVOID pData= NULL;

	//stData *pTmp = new stData[500];
	//
	//pData = pTmp;
	//::SafeArrayAccessData(vData.parray,(void HUGEP**)&pData);
	//for(int  i=0;  i<500;  ++i)
	//{
	//	//pData = m_stYearPrice1[i];
	//}
	////memcpy(pData,m_stYearPrice1,sizeof(stData)*500);   //赋值


	////加数据     500个日线数据
	//m_Chart.AddPackData(0,vData);
	//::SafeArrayUnaccessData(vData.parray);
	
	return TRUE;  // 除非将焦点设置到控件，否则返回 TRUE
}

// 如果向对话框添加最小化按钮，则需要下面的代码
//  来绘制该图标。对于使用文档/视图模型的 MFC 应用程序，
//  这将由框架自动完成。

void CTestChartDlg::OnPaint()
{
	if (IsIconic())
	{
		CPaintDC dc(this); // 用于绘制的设备上下文

		SendMessage(WM_ICONERASEBKGND, reinterpret_cast<WPARAM>(dc.GetSafeHdc()), 0);

		// 使图标在工作区矩形中居中
		int cxIcon = GetSystemMetrics(SM_CXICON);
		int cyIcon = GetSystemMetrics(SM_CYICON);
		CRect rect;
		GetClientRect(&rect);
		int x = (rect.Width() - cxIcon + 1) / 2;
		int y = (rect.Height() - cyIcon + 1) / 2;

		// 绘制图标
		dc.DrawIcon(x, y, m_hIcon);
	}
	else
	{
		CDialogEx::OnPaint();
	}
}

//当用户拖动最小化窗口时系统调用此函数取得光标
//显示。
HCURSOR CTestChartDlg::OnQueryDragIcon()
{
	return static_cast<HCURSOR>(m_hIcon);
}
 
void CTestChartDlg::OnBnClickedOk()
{
	// TODO: 在此添加控件通知处理程序代码
	CDialogEx::OnOK();
}
 
void CTestChartDlg::ShowTips(CString sInf)
{
	SCROLLINFO ScroInfo;

	m_listInfo.AddString(sInf);

	int nCount = m_listInfo.GetCount();
	if (nCount > 0)
		m_listInfo.SetCurSel(nCount - 1);

}

//添加历史数据：500条记录
//添加数据到绘图控件
void CTestChartDlg::OnBnClickedButtonAppenddata()
{
	m_Chart.ClearAllData();
	for (int i=0; i<500; i++)
	{
		m_Chart.AppendData((short)G_CHTDATA_DATE,	(double)m_stDayPrice1[i].dDate);
		//m_Chart.AppendData((short)G_CHTDATA_TIME,	(double)m_stDayPrice1[i].dTime);
		m_Chart.AppendData((short)G_CHTDATA_CLOSE,	(double)m_stDayPrice1[i].dClosePrice);
		m_Chart.AppendData((short)G_CHTDATA_OPEN,	(double)m_stDayPrice1[i].dOpenPrice);
		m_Chart.AppendData((short)G_CHTDATA_HIGH,	(double)m_stDayPrice1[i].dHighPrice);
		m_Chart.AppendData((short)G_CHTDATA_LOW,	(double)m_stDayPrice1[i].dLowPrice);
		m_Chart.AppendData((short)G_CHTDATA_CHANGERATE,	(double)m_stDayPrice1[i].dChangeRate);
		m_Chart.AppendData((short)G_CHTDATA_VOLUME,	(double)m_stDayPrice1[i].dContractVolume);
		m_Chart.AppendData((short)G_CHTDATA_AMOUNT,	(double)m_stDayPrice1[i].dContractAmout);
	}

	ShowTips( _T("添加500条历史数据完成")); 

	m_Chart.SetViewType(G_CHTTYPE_KLINE);
	m_Chart.ReDrawChart();
}

//添加分时图数据：只添加2/3[共240条]
void CTestChartDlg::OnBnClickedButtonAddchartdata()
{
	m_Chart.ClearAllData();
	
	m_Chart.SetViewType(G_CHTTYPE_TREND);
	m_Chart.SetXPeriods(93000000, 112900000 ,130100000, 150000000);
	m_Chart.SetPreDayClosePrice(22.9);

	double m_dAMBegin  = 93000000,
		   m_dAMEnd    = 112900000,
	       m_dPMBegin  = 130100000,
	       m_dPMEnd    = 150000000;
	
	for(int i=0; i<240;  ++i)
	{
		m_Chart.UpdateLastTickData(m_stTickPrice1[i].dTime,m_stTickPrice1[i].dClosePrice,m_stTickPrice1[i].dContractVolume	);
	}

	m_Chart.ReDrawChart();
	ShowTips( _T("添加160条分时数据完成")); 
}

//添加实时数据：剩下的1/3 按每隔20秒发送一次
void CTestChartDlg::OnBnClickedButtonAddrealtimedata()
{
	CString s;
	GetDlgItem(IDC_EDIT_TIMERVAL)->GetWindowText(s);

	double d = 0;   
	d = atof( "0.2" );

	if (d <= 0.0)
		return;

	m_Chart.ClearAllData();
	// 设置Timer
	SetTimer(WM_TIMER_TICKSEND, 100, NULL);
	ShowTips( _T("Timer已经启动，开始发送分时数据......"));  
}

//设置显示类型
void CTestChartDlg::OnBnClickedButtonSetviewtype()
{
	static bool bFlag = true;
	int nType;

	if (bFlag)
	{
		nType = G_CHTTYPE_TREND;
	}
	else
	{
		nType = G_CHTTYPE_KLINE;
	}

	bFlag = !bFlag;

	m_Chart.SetViewType((short)nType);
	m_nShowType = nType;
	if (nType == G_CHTTYPE_TREND)
	{	
		OnBnClickedButtonAddchartdata();
		ShowTips( _T("显示分时图") ); 
	}
	else
	{
		OnBnClickedButtonAppenddata();
		ShowTips( _T("显示K线") ); 
	}

	m_Chart.ReDrawChart();
	
}

//清除数据
void CTestChartDlg::OnBnClickedButtonCleardata()
{
	KillTimer(WM_TIMER_TICKSEND);

	m_Chart.ClearAllData();
}


void CTestChartDlg::OnTimer(UINT_PTR nIDEvent)
{	
	switch(nIDEvent)
	{
		case WM_TIMER_TICKSEND:
			{
				if(m_TimerCnt<1 || m_TimerCnt>=240)
				{
					m_TimerCnt = 1;
					KillTimer(WM_TIMER_TICKSEND);
					break;
				}

				//发送一组数据 
				m_Chart.UpdateLastTickData((double)m_stTickPrice1[m_TimerCnt].dTime,	
					(double)m_stTickPrice1[m_TimerCnt].dClosePrice,
					(double)m_stTickPrice1[m_TimerCnt].dContractVolume);

				m_Chart.SetViewType(m_nShowType);
				m_Chart.ReDrawChart();

				++m_TimerCnt;
			}
			break;
		case  WM_TIMER_TEST:
			{
				RequestTestData();

			}
			break;
		default:break;
	}

	CDialogEx::OnTimer(nIDEvent);
}

// 清除显示
void CTestChartDlg::OnBnClickedButtonClearinf()
{
	m_Chart.ClearAllData();
	m_Chart.ReDrawChart();

	Invalidate(0);
	GetDlgItem(IDC_BUTTON_CLEARINF)->SetWindowText(_T("清除显示"));
}

template<class F, class... Args>
auto CTestChartDlg::doUpdateUiTask(F&& f, Args&&... args)->std::future<typename std::result_of<F(Args...)>::type>
{
	using return_type = typename std::result_of<F(Args...)>::type;

	auto task = std::make_shared< std::packaged_task<return_type()> >(
		std::bind(std::forward<F>(f), std::forward<Args>(args)...)
		);

	std::future<return_type> res = task->get_future();
	{
		std::unique_lock<std::mutex> lock(queue_mutex);

		tasks.emplace([task]() { (*task)(); });
	}
	PostMessage(WM_MYTASK, 0, 0);

	return res;
}



LRESULT CTestChartDlg::OnUITask(WPARAM wparam, LPARAM lparam)
{
	std::unique_lock<std::mutex> lock(this->queue_mutex);
	while (tasks.size() > 0)
	{
		std::function<void()> task = std::move(this->tasks.front());
		tasks.pop();
		task();
	}


	return 1;
}



void CTestChartDlg::OnSize(UINT nType, int cx, int cy)
{
	CDialogEx::OnSize(nType, cx, cy);

	// TODO: 在此处添加消息处理程序代码
	if(m_Chart.GetSafeHwnd())
	 {
		  m_Chart.MoveWindow(0,0,cx,cy);//控件缩放
		  m_Chart.Init((long)this->m_hWnd, cx, cy, 0);
		  
		 // m_Chart.BringWindowToTop(); 
		//  SetWindowPos(&m_Chart,0,0,100,100, WS_VISIBLE);

	}
}

LRESULT CTestChartDlg::OnMouseAxis( WPARAM wParam,LPARAM lParam )
{
	int nTime = (int)wParam;

	TRACE("OnMouseAxis");
	return 1;
}

void CTestChartDlg::OnBnClickedButton45()
{
	// TODO: 在此添加控件通知处理程序代码

}

int  CTestChartDlg::DealAskData( const AskData* pAsk )
{

		//分类处理
	if (pAsk->m_nType == RT_LOGIN)//RT_LOGIN_HJ
		{
			AnsLogin *pBuffer = (AnsLogin *)(pAsk);
			ShowTips( _T(">>>成功登录业务服务器."));
			
			TestSrvLoadData *pTest = (TestSrvLoadData *)(pBuffer + (sizeof(AnsLogin) - 1));
			//ShowTips( _T(">>>启动心跳包..."));
			//开始发送心跳包
			//SetTimer(WM_TIMER_TEST, 20000, NULL);
			CRLog(E_DEBUG, "%d:成功登录业务服务器", 6666);

			return  sizeof(AnsLogin)+ sizeof(TestSrvLoadData)  + pBuffer->m_nSize;
		}
		else if (pAsk->m_nType == RT_TESTSRV)//服务端回应
		{
			TestSrvLoadData  *pLoad = (TestSrvLoadData  *)(pAsk);

			ShowTips( _T(">>>收到响应心跳包！"));

			CRLog(E_DEBUG, "%d:收到响应心跳包", 7777);
		}
		//else if(pData->m_nType == RT_TREND)
		//{
		//	AnsTrendData *pBuffer = (AnsTrendData *)pData;

		//	int test = 0;
		//}
		else if(pAsk->m_nType == RT_RETURN_EMPTY)//空数据包
		{
			ShowTips( _T(">>>收到空数据包！"));

			CRLog(E_DEBUG, "%d:收到空数据包", 8888);
		}

		else if (pAsk->m_nType == RT_HISTREND)//收到历史分时
		{

				AnsHisTrend *pBuffer = (AnsHisTrend *)pAsk;

				//for  test
				m_Chart.ClearAllData();
				m_Chart.SetXPeriods(93000000, 112900000, 130100000, 150000000);
				
				//201000000~235900000 100000~23000000    90100000~112900000 133100000~153000000
				//void CSimpleChartCtrl::SetHJPeriods(DOUBLE dBegin1, DOUBLE dEnd1, DOUBLE dBegin2, DOUBLE dEnd2, DOUBLE dBegin3, DOUBLE dEnd3, DOUBLE dBegin4, DOUBLE dEnd4)
				//m_Chart.SetHJPeriods(201000000, 235900000, 100000, 23000000,90100000,112900000,133100000,153000000);
				
				m_Chart.SetPreDayClosePrice(pBuffer->m_shTend.m_shHead.m_lPrevClose / 1000);
				m_Chart.SetViewType(G_CHTTYPE_TREND);

				double baseTime = 93100000;
				CRLogTrend(E_APPINFO, "Date	Close	Volume");
				for(int i=0; i<pBuffer->m_shTend.m_shHead.m_nSize;   ++i)//661，一天661分钟
				{
					m_stTickPrice1[i].dClosePrice	    = pBuffer->m_shTend.m_shData[i].m_lNewPrice / 1000;		// 最新价
					m_stTickPrice1[i].dContractVolume   = pBuffer->m_shTend.m_shData[i].m_lTotal;			// 成交量 //对于股票(单位:股)
					m_stTickPrice1[i].dTime = baseTime + (i + 1) * 100000;//i;
				
					//是用于股票的分时区间，这里用于显示黄金，自定义一下
					//if (i > 29 && i <= 89 )
					//	baseTime = 100000000;
					//else if (i > 89 && i <= 119)
					//	baseTime = 110000000;
					//else if(i > 119 && i < 179)
					//	baseTime = 130000000;
					//else if (i > 179 && i < 139)
					//	baseTime = 140000000;
				
					/*if (m_stTickPrice1[i].dTime < 93100000 && i>1)
						m_stTickPrice1[i].dTime = m_stTickPrice1[i - 1].dTime;*/


					//写日志
					//CRLogTrend(E_APPINFO, "[HisTrend] Date:%ld,closePrice:%.2f,Volume:%.2f,Time:%d",pBuffer->m_shTend.m_shHead.m_lDate,m_stTickPrice1[i].dClosePrice,m_stTickPrice1[i].dContractVolume,i);
				
					CRLogTrend(E_APPINFO, "%ld	%.2f	%.2f	%d",
						pBuffer->m_shTend.m_shHead.m_lDate,
						m_stTickPrice1[i].dClosePrice,
						m_stTickPrice1[i].dContractVolume,
						i);

					//绘制
					m_Chart.UpdateLastTickData(m_stTickPrice1[i].dTime, m_stTickPrice1[i].dClosePrice, m_stTickPrice1[i].dContractVolume);
					ShowTips( _T(">>>添加分时数据到日志和图形界面")); 


				}
				//m_Chart.ReDrawChart();

				return  (sizeof(AnsHisTrend) + (pBuffer->m_shTend.m_shHead.m_nSize )* sizeof(StockCompHistoryData) );
		}
		else if (pAsk->m_nType == RT_TECHDATA_EX)//收到K线数据
		{
			AnsDayDataEx *pBuffer = (AnsDayDataEx *)pAsk;

						
			m_Chart.ClearAllData();
			CRLogTrend(E_APPINFO, "Date	Open	High	Low	Close	Volume");
			for(int i=0; i<pBuffer->m_nSize;   ++i)//天数
			{
				//写日志
				CRLogTrend(E_APPINFO, "%u	%ld	%ld	%ld	%ld	%u",
					//E_APPINFO, "Date:%u	Open:%ld	High:%ld	Low:%ld	Close:%ld	Volume:%u",
							pBuffer->m_sdData[i].m_lDate,
							pBuffer->m_sdData[i].m_lOpenPrice,
							pBuffer->m_sdData[i].m_lMaxPrice,
							pBuffer->m_sdData[i].m_lMinPrice,
							pBuffer->m_sdData[i].m_lClosePrice,
							pBuffer->m_sdData[i].m_lTotal
					);
								
				//填K线控件数据
				m_Chart.AppendData((short)G_CHTDATA_DATE,	(double)pBuffer->m_sdData[i].m_lDate);
				m_Chart.AppendData((short)G_CHTDATA_CLOSE,	(double)pBuffer->m_sdData[i].m_lClosePrice/1000);
				m_Chart.AppendData((short)G_CHTDATA_OPEN,	(double)pBuffer->m_sdData[i].m_lOpenPrice/1000);
				m_Chart.AppendData((short)G_CHTDATA_HIGH,	(double)pBuffer->m_sdData[i].m_lMaxPrice/1000);
				m_Chart.AppendData((short)G_CHTDATA_LOW,	(double)pBuffer->m_sdData[i].m_lMinPrice/1000);
				m_Chart.AppendData((short)G_CHTDATA_CHANGERATE,	(double)pBuffer->m_sdData[i].m_lNationalDebtRatio);
				m_Chart.AppendData((short)G_CHTDATA_VOLUME,	(double)pBuffer->m_sdData[i].m_lTotal);
				m_Chart.AppendData((short)G_CHTDATA_AMOUNT,	(double)pBuffer->m_sdData[i].m_lMoney);


				//doUpdateUiTask([&](string tmp,string str)
				//{
                  ShowTips( _T(">>>添加K线数据到日志和图形界面")); 
				//}, string(""), string(""));
				
				//加入线程池，效果不大
				//std::thread t1([=] {

				//	m_pool.AddTask([=]() {
				//		this->ShowTips(_T(">>>添加K线数据到日志和图形界面")); 
				//	});//任务是一个处理函数
				//
				//});

				//t1.join();
			}
			//绘制K线	
			m_Chart.SetViewType(G_CHTTYPE_KLINE);
            m_Chart.ReDrawChart();
		
			CRLog(E_DEBUG, "%d:处理完一个K线包", 9999);
			return  (sizeof(AnsDayDataEx) + (pBuffer->m_nSize - 1) * sizeof(StockCompDayDataEx));
		}
		else if (pAsk->m_nType == RT_DAY_CURPOS)//日线当前实际位置
		{
			//AnsSeverDayCurpos
			AnsSeverDayCurpos *pBuffer = (AnsSeverDayCurpos *)pAsk;
			CRLog(E_DEBUG, "日线当前的实际位置:%d", pBuffer->m_nCurPos);
			return  (sizeof(AnsSeverDayCurpos));
		}

		return  -1;
}

//网络通信
void CTestChartDlg::OnReceive( int nErrorCode )
{   
	int pakageLen = 0;
	try
	{


	//ShowTips( _T(">>>收到数据包") ); 
	int nLen     = m_ClientSocket.Receive(szBuf,MAX_BUFSIZE);

	//判断接收缓冲是否堵塞,若堵塞，停2秒
	int  dwError = GetLastError();
	if (nLen == SOCKET_ERROR)
	{
		//if (dwError == WSAEWOULDBLOCK)
		//{
		//	CRLog(E_DEBUG, "接收缓冲堵塞了:%d", 1112);guznbi
		//	msleep(2);
		//	nLen = m_ClientSocket.Receive(szBuf, MAX_BUFSIZE);
		//}

		CRLog(E_DEBUG, "服务器故障，故障编码:%d", dwError);
		gRecevLen = 0;
		gDealLen = 0;
		return;
	}

	//全部拷贝到本地
	//加保护措施
	std::unique_lock<std::mutex> locker(m_mutex);
	//更新待处理的数据
	memcpy(szDealBuf + gRecevLen, szBuf, nLen);
	gRecevLen += nLen;

	
		

		//去掉头，之处理块
		while (gRecevLen /*+ nLen*/ > gDealLen)
		{
			//检测包头
			int nCheck = 0;
			for (int i = 0;i < 4; ++i)
			{
				if (m_szFlag[i] != (szDealBuf + gDealLen)[i])
				{
					nCheck = 1;
					 if (gDealLen <= 0)
					 {	
					    gRecevLen = 0;
						gDealLen  = 0;
						
						break;
					}
					//{
						gDealLen++;
					//	continue;
					//}

					//gRecevLen = 0;
					//gDealLen  = 0;
						CRLog(E_DEBUG, "%d", 1111);
						//nCheck = 1;
						break;
				}
			}

			if (nCheck >= 1)
				continue;

			//packHead *ph = (packHead *)szDealBuf;
			//gRecevLen -= sizeof(packHead);
		    //memcpy(szDealBuf,szDealBuf + sizeof(packHead), gRecevLen );

			DataHead *pData = (DataHead *)(szDealBuf + gDealLen + sizeof(packHead));

			if (pData->m_nType == RT_ZIPDATA)//压缩包
			{
				TransZipData *pZipData = (TransZipData *)(pData);
				//完整包长
				 pakageLen = (sizeof(TransZipData) /*+ sizeof(DataHead)*/ + pZipData->m_lZipLen);
				//数据没有收全，新位置继续接收
				if ((nLen + gRecevLen - gDealLen) <  pakageLen)
				{
					//gRecevLen += nLen;
					return;
				}

				

				YlsTo(pZipData, 1);

				AskData *pAsk = NULL;

				if (pZipData->m_lOrigLen > 0 && pZipData->m_lZipLen > 0)
				{
					//char *pTmp = new char[sizeof(Bytef)*pZipData->m_lOrigLen];
					/*if( !pBuffer->Alloc(sizeof(Bytef)*pZipData->m_lOrigLen) )
					return NULL;*/					
					//boost::shared_array<char > pTmp(new char[sizeof(Bytef)*pZipData->m_lOrigLen]);

					//memset(pTmp.get(), 0, sizeof(char)*(sizeof(Bytef)*pZipData->m_lOrigLen));
					memset(szZipBuf, 0, sizeof(char)*(sizeof(Bytef)*pZipData->m_lOrigLen));

					Bytef* pTemp   = (Bytef*)szZipBuf;
					uLongf pRetLen = (uLongf)pZipData->m_lOrigLen;

					if ((uncompress(pTemp, &pRetLen, (Bytef*)pZipData->m_cData, (uLongf)pZipData->m_lZipLen) == Z_OK) &&
						(pRetLen == pZipData->m_lOrigLen))
					{
						//lastNum = 0;

						pAsk = (AskData*)pTemp;
						int nOriLen = pZipData->m_lOrigLen;

						// 头
						pAsk->m_nType = YlsShortI(pAsk->m_nType);
						if (nOriLen >= sizeof(DataHead))
						{
							YlsTo((DataHead*)pAsk, 1);
						}


						DealAskData(pAsk);

					}//end   uncompress

					 //delete[] pTmp;
				}//end &&

				 //收全开始处理
				gDealLen += sizeof(packHead);
				gDealLen += pakageLen;

			}//end  RT_ZIPDATA
			else	
			{
				//int pakageLen = sizeof(DataHead);
				//int pakageLen = 0;
				pakageLen+= DealAskData((AskData *)pData);
				if (pakageLen < 0)
					return;

				pakageLen += sizeof(packHead);
				gDealLen += pakageLen;

				//return;
			}


		

		}//end  if(nLen >0)


	}
	catch (const std::exception&)
	{
		int test = 0;
	}
	catch(...)
	{
		int  test = 0;

	}
	
	if (gDealLen >= (sizeof(packHead) + pakageLen))
	{
		gDealLen -= sizeof(packHead);
		gDealLen -= pakageLen;

		//memcpy(szDealBuf, 0, MAX_BUFSIZE);
		gRecevLen = gRecevLen - gDealLen;
		memcpy(szDealBuf, szDealBuf + gDealLen, gRecevLen);
		memset(szDealBuf+gRecevLen, 0, MAX_BUFSIZE-gRecevLen);

		CRLog(E_DEBUG, "%d", 4444);
	}
	else
		gRecevLen = 0;

	gDealLen = 0;
	

	memset(szBuf, 0, MAX_BUFSIZE);
}

void CTestChartDlg::OnSend( int nErrorCode )
{
	if(nErrorCode == 0)
	{
		ShowTips( _T(">>>发送请求包成功")); 
	}else
	{
		ShowTips( _T(">>>发送请求包失败")); 
	}
}

void CTestChartDlg::OnClose( int nErrorCode )
{
	/*trListBox.AddString("OnAccept");*/
	if(nErrorCode == WSAECONNABORTED)
	{ 
		ShowTips( _T(">>>服务器关闭了socket连接")); 
	
		m_ClientSocket.Close();
	}
	
}

void CTestChartDlg::OnOutOfBandData( int nErrorCode )
{
	/*trListBox.AddString("OnOutOfBandData");*/
}

void CTestChartDlg::OnConnect( int nErrorCode )
{
	if(nErrorCode == 0)
	{
		ShowTips( _T(">>>成功连接到服务器！"));
		ShowTips( _T(">>>发送登录请求..."));
	    RequestLoginData();

		//SetTimer(WM_TIMER_TICK, 100, NULL);
	}
}



//向服务器发送数据
int CTestChartDlg::OnRequest(void *pRequest, int nLen)
{
	void* pSendData = pRequest;
	int   nSendLen  = nLen;

	//if(m_ClientSocket != NULL)
	{
		return m_ClientSocket.Send(pSendData,nSendLen);
	}
}

//登录请求       packHead + AskData + ReqLogin
void CTestChartDlg::RequestLoginData()
{
	int lBodyLen    = sizeof(AskData) + sizeof(ReqLogin) - sizeof(CodeInfo);
	int total = lBodyLen+sizeof(packHead);
	//char* pBuf = new char[total];

	boost::shared_array<char > pSend(new char[total]);

	if( pSend == NULL )
	{
		return ;
	}

	packHead *pHead = (packHead* )pSend.get();
	/*int *pTag = (int*)pHead;
	ptag = 2010;*/
	memcpy(pHead->tag,"2010",4);
	pHead->len =lBodyLen;
	
	AskData *pAskData = (AskData* )(pSend.get()+sizeof(packHead));
	memset(pAskData, 0, lBodyLen);

	pAskData->m_nType = RT_LOGIN;//RT_LOGIN
	pAskData->m_nSize = sizeof(ReqLogin)/sizeof(CodeInfo);//nCodeCount;

	ReqLogin* pLogin  = (ReqLogin*)pAskData->m_pCode;
	CString strPwd;

	CHSDes HSDes;
	strPwd = HSDes.MakeSerial(m_strPwd);

	m_nTransType=11;//YLS_User_Pwd;
	// 不检测用户
	if( m_nTransType & YLS_NotUser)
		pAskData->m_nOption |= Login_Option_NotCheck;

	// 需要服务器返回负载信息
	//if( m_nTransType & YLS_SendSrvLoad )
	//	pAskData->m_nOption |= Login_Option_SrvLoad;

	//
	pAskData->m_lKey = 3;//SendClientVerInfoToSrv;  // 客户端内部版本

	strncpy(pLogin->m_szPWD, strPwd, min(sizeof(pLogin->m_szPWD), strPwd.GetLength()));
	strncpy(pLogin->m_szUser,m_strUID,sizeof(pLogin->m_szUser));

	OnRequest(pSend.get(),total);

	//delete []pSend;
}

//心跳包
//RT_TESTSRV    head+TestSrvData
void CTestChartDlg::RequestTestData()
{
	static int index=0;

	int lBodyLen    = sizeof(TestSrvData);
	int total = lBodyLen+sizeof(packHead);
	//char* pSend = new char[total];
	boost::shared_array<char > pSend(new char[total]);
	if( pSend == NULL )
	{
		return ;
	}

	packHead *pHead = (packHead* )pSend.get();
	memcpy(pHead->tag,"2010",4);
	pHead->len =lBodyLen;
	
	TestSrvData *pAskData = (TestSrvData* )(pSend.get() +sizeof(packHead));
	memset(pAskData, 0, lBodyLen);

	pAskData->m_nType = RT_TESTSRV;
	pAskData->m_nIndex = index++;


	OnRequest(pSend.get(),total);

	if(!m_ClientSocket.IsConnected())
	{
		KillTimer(WM_TIMER_TEST);
		
		int nRet = m_ClientSocket.Connect(gsIP[m_cmbServer.GetCurSel()].c_str(), strutils::FromString<int> (gsPort[m_cmbServer.GetCurSel()]));
	}
}


void CTestChartDlg::RequestTrendData()
{
}

void CTestChartDlg::RequestHisTrendData()
{
	memset(szAskBuf,0,10240);

	int lBodyLen    = sizeof(AskData) + sizeof(ReqHisTrend) - sizeof(CodeInfo);
	int total = lBodyLen+sizeof(packHead);
	char* pSend = szBuf;
	if( pSend == NULL )
	{
		return ;
	}

	//具体类型折算成CodeInfo的大小
	short nCount = sizeof(ReqHisTrend) / sizeof(CodeInfo);
	if( sizeof(ReqHisTrend) % sizeof(CodeInfo) )
	{
		nCount++;
	}

	packHead *pHead = (packHead* )pSend;
	memcpy(pHead->tag,"2010",4);
	pHead->len = lBodyLen;
	
	AskData *pAskData = (AskData* )(pSend+sizeof(packHead));
	memset(pAskData, 0, lBodyLen+1);

	pAskData->m_nType = RT_HISTREND;//RT_TREND;
	pAskData->m_nSize = nCount;
	
	ReqHisTrend* pReqHisTrend = (ReqHisTrend*)(pAskData->m_pCode);
	
	strncpy(pReqHisTrend->m_ciStockCode.m_cCode, gsSecurity[m_cmbSecurity.GetCurSel()].c_str(),sizeof(pAskData->m_pCode->m_cCode));
	pReqHisTrend->m_ciStockCode.m_cCodeType = gnMarket[m_cmbSecurity.GetCurSel()];
	

	CTime time;
	m_HisTrendDate.GetTime(time);
	string st = time.Format("%Y%m%d").GetBuffer();

	if (m_nAutoQuery == 1)//发请求到今天
	{	
		//doUpdateUiTask([&](string strCtrlDate,ReqHisTrend* ReqHisTrend)
		//{

			gregorian::date  d1 = from_undelimited_string(st);
			gregorian::date  d2 = gregorian::day_clock::universal_day();
			double val1 = strutils::FromString<double>(st);
			double val2 = strutils::FromString<double>(gregorian::to_iso_string(d2));
			gregorian::days dur = d2 - d1;

			if (dur.days() > 0)
			{	

				for (double i = 0; i<dur.days(); ++i)
				{
					//发送请求
					pReqHisTrend->m_lDate = val1;
					//判断发送缓冲是否堵塞,若堵塞，停2秒
					int  dwBytes = OnRequest(pSend, total);
					int  dwError = GetLastError();
					if (dwBytes == SOCKET_ERROR)
					{
						if (dwError == WSAEWOULDBLOCK)
						{
							CRLog(E_DEBUG, "发送缓冲堵塞了:%d", 1113);
							msleep(2);
							OnRequest(pSend, total);
						}
					}

					//界面展示
					CString  strTmp;
					strTmp.Format(">>>请求历史分时，日期为:%8.0f", val1);

					//doUpdateUiTask([&](CString tmp)
					//{
					//	ShowTips(tmp);
					//}, strTmp);

					ShowTips(strTmp);

					//Sleep(50);
					d1  += gregorian::days(1);
					val1 = strutils::FromString<double>(gregorian::to_iso_string(d1));

				}
				return;
			}

		//}, st, pReqHisTrend);

		return;
	}
	else
	{
		//gregorian::date  d1 = from_undelimited_string(st);
		//pReqHisTrend->m_lDate = strutils::FromString<long>(gregorian::to_iso_string(d1));

		pReqHisTrend->m_lDate = strutils::FromString<long>(st);
	}


	OnRequest(pSend,total);

}


//请求历史K线数据
void CTestChartDlg::RequestHisQuoteData()
{
	memset(szAskBuf, 0, 10240);
	ShowTips(_T(">>>请求历史K线，具体数据见日志."));
	// TODO: 在此添加控件通知处理程序代码
	int lBodyLen    = sizeof(AskData) + sizeof(ReqDayData) - sizeof(CodeInfo);
	int total = lBodyLen+sizeof(packHead);
	//char* pSend = new char[total];

	packHead *pHead = (packHead* )szAskBuf;
	memcpy(pHead->tag,"2010",4);
	pHead->len =lBodyLen;

	//具体类型折算成CodeInfo的大小
	short nCount = sizeof(ReqDayData) / sizeof(CodeInfo);
	if( sizeof(ReqDayData) % sizeof(CodeInfo) )
	{
		nCount++;
	}

	AskData* pAskData = (AskData*)(szAskBuf+sizeof(packHead));

	if( pAskData == NULL )
	{
		return ;
	}
	memset(pAskData, 0, lBodyLen);

	pAskData->m_nType = RT_TECHDATA_EX;
	pAskData->m_nSize = nCount;

	ReqDayData* pDayData  = (ReqDayData*)pAskData->m_pCode;
	//组合2个参数，成日以上级别的请求【1：日线  ，7：周线，30：月线】
	//
	int nCurSel = m_cmbQoutePeriod.GetCurSel();
	if(nCurSel == 2)
		pDayData->m_nPeriodNum = 30;
	else if(nCurSel == 1)
		pDayData->m_nPeriodNum = 7;
	else
		pDayData->m_nPeriodNum = 1;

	pDayData->m_cPeriod    = PERIOD_TYPE_DAY;
	pDayData->m_lBeginPosition = 0;

	//计算天数
	CTime time;
	m_HisDateST.GetTime(time);
	string st = time.Format("%Y%m%d").GetBuffer();
	m_HisDateEnd.GetTime(time);
	string ed = time.Format("%Y%m%d").GetBuffer();

	gregorian::date  d1 = from_undelimited_string(st);
	gregorian::date  d2 = from_undelimited_string(ed);
	gregorian::days dur = d2 - d1;

	if (dur.days() > 0)
		pDayData->m_nDay = dur.days();
	else
		pDayData->m_nDay = 300;

	pDayData->m_nSize = 0;
	//选取的合约
	int nCur = m_cmbSecurity.GetCurSel();
	string tt = gsSecurity[nCur];
	strcpy(pDayData->m_ciCode.m_cCode, tt.c_str());
	pDayData->m_ciCode.m_cCodeType = gnMarket[m_cmbSecurity.GetCurSel()];

	OnRequest(szAskBuf,total);

}


//连接服务器
void CTestChartDlg::OnBnClickedButton1()
{
	m_ClientSocket.CloseConnect();

	if(!m_ClientSocket.IsConnected() && m_ClientSocket.m_hSocket == INVALID_SOCKET)
	{
		if(!m_ClientSocket.Create())
			ShowTips( _T(">>>创建套接字失败，请重新登录"));
	}

	//int  nPort = 6019;
	int nRet = m_ClientSocket.Connect(gsIP[m_cmbServer.GetCurSel()].c_str(), strutils::FromString<int>(gsPort[m_cmbServer.GetCurSel()]));

	ShowTips( _T(">>>开始连接服务器..."));

	if(nRet == 0)
	{
		int nErrorCode = m_ClientSocket.GetLastError();

		//非阻塞模式，休息100毫秒
		if(nErrorCode == WSAEWOULDBLOCK)
		{
			Sleep(500);
		}

	}
	//login
	m_strUID = "95559";
	m_strPwd = "95559";
	int nLength = 0;
	

}

//取消订阅:AGTD的分时数据
//Head + AskData
void CTestChartDlg::OnCancelAgtdTrend()
{
	memset(szAskBuf, 0, 10240);
	int lRetLen    = sizeof(AskData);
	//int lRetLen    = sizeof(AskData) + sizeof(ReqHisTrend) - sizeof(CodeInfo);
	int total = lRetLen+sizeof(packHead);
	//char* pSend = new char[total];

	boost::shared_array<char > pSend(new char[total]);
	if( pSend == NULL )
	{
		return ;
	}
	packHead *pHead = (packHead* )szAskBuf;
	memcpy(pHead->tag,"2010",4);
	pHead->len =lRetLen;
	
	AskData *pAskData = (AskData* )(szAskBuf +sizeof(packHead));
	memset(pAskData, 0, lRetLen);
	
	pAskData->m_nType = RT_TREND;
	pAskData->m_nSize = 1;//nCodeCount;
	
	strncpy(pAskData->m_pCode->m_cCode,"Ag(T+D)",sizeof(pAskData->m_pCode->m_cCode));
	pAskData->m_pCode->m_cCodeType = 0x0401;

	OnRequest(szAskBuf,total);
	//delete []pSend;
}


//获取AGTD的分时数据
//Head + AskData + ReqHisTrend
void CTestChartDlg::OnBnClickedButtonGetagtdTrend()
{
	UpdateData();
	RequestHisTrendData();
	ShowTips( _T(">>>发送TD [历史分时]请求..."));
}


//获取AGTD的日K线行情数据
//返回结构AnsDayDataEx
////Head + AskData + ReqDayData
void CTestChartDlg::OnBnClickedButtonGetagtdHis()
{
	UpdateData();
	RequestHisQuoteData();
	ShowTips( _T(">>>发送TD [行情数据]请求..."));
}

/*
心跳包
类型:RT_TESTSRV	0x0905
结构：TestSrvData
服务器收到的长度:4字节长
*/

void CTestChartDlg::OnBnClickedButtonPxx()
{
	// TODO: 在此添加控件通知处理程序代码
}


void CTestChartDlg::OnBnClickedButtonDjx()
{
	// TODO: 在此添加控件通知处理程序代码
}


void CTestChartDlg::OnBnClickedButtonAutoDraw()
{
	// TODO: 在此添加控件通知处理程序代码
}


void CTestChartDlg::OnBnClickedButtonContinueLine()
{
	// TODO: 在此添加控件通知处理程序代码
}
